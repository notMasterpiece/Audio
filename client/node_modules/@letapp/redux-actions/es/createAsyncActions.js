import createAction from './createAction';
import isUndefined from './utils/isUndefined';
import isPlainObject from './utils/isPlainObject';
var asyncActionTypes = ['start', 'success', 'error'];
export default function createAsyncActions(actionType, actionOptions) {
  if (actionType.includes('/')) {
    var actionIndex = actionType.lastIndexOf('/') + 1;
    var moduleName = actionType.substring(0, actionIndex);
    var actionName = actionType.substring(actionIndex, actionType.length);
    actionType = [moduleName, actionName.toUpperCase()].join('');
  }

  var action = createAction(actionType);
  asyncActionTypes.forEach(function (type) {
    var asyncType = [actionType, type.toUpperCase()].join('_');
    var actionTypeLower = type.toLowerCase();
    var payloadCreator;
    var metaCreator;

    if (!isUndefined(actionOptions) && isPlainObject(actionOptions) && isPlainObject(actionOptions[type])) {
      var options = actionOptions[type];
      payloadCreator = options.payloadCreator;
      metaCreator = options.metaCreator;
    }

    action[actionTypeLower] = createAction(asyncType, payloadCreator, metaCreator);
  });
  return action;
}
createAsyncActions.asyncActionTypes = asyncActionTypes;

createAsyncActions.setTypes = function (_ref) {
  var start = _ref.start,
      success = _ref.success,
      error = _ref.error;
  asyncActionTypes = [start, success, error];
  createAsyncActions.asyncActionTypes = asyncActionTypes;
};