{"ast":null,"code":"var _jsxFileName = \"/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanel.js\";\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types'; // import Vizyalization from \"../AudioVizyalizations/Vizyalization\";\n\nimport PlayPanelRight from './PlayPanelRight';\nimport PlayPanelProgressBar from './PlayPanelProgressBar';\nimport PlayPanelAudioInfo from './PlayPanelAudioInfo';\nimport { normalizeAudioCurentTime } from '../../helpers/helpers';\nimport './playerPanel.scss';\nimport { IoIosPlay, IoIosPause, IoMdSkipForward, IoMdSkipBackward } from \"react-icons/io\";\n\nconst PlayPanel = ({\n  audioList,\n  currentAudio,\n  loop,\n  audio,\n  handleMetadata,\n  handleTimeupdate,\n  isPlaying,\n  handlePlay,\n  volume,\n  defaultValue,\n  changeVolume,\n  handleAudioLoop,\n  setAudioDuration,\n  currentTrackMoment,\n  currentTrackDuration\n}) => {\n  return React.createElement(\"div\", {\n    className: \"ms_player_wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ms_player_close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-angle-up\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"player_mid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"audio-player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-jplayer\",\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"jp-audio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(PlayPanelProgressBar, {\n    audio: audio,\n    setAudioDuration: setAudioDuration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(PlayPanelAudioInfo, {\n    isPlaying: isPlaying,\n    currentTrackDuration: currentTrackDuration || '0:00',\n    currentTrackMoment: normalizeAudioCurentTime(currentTrackMoment),\n    audio: audio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"jp-controls flex-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"jp-previous\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(IoMdSkipBackward, {\n    size: 25,\n    color: 'white',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"jp-play\",\n    onClick: handlePlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, isPlaying ? React.createElement(IoIosPause, {\n    size: 50,\n    style: {\n      transform: 'translateX(2px)'\n    },\n    color: 'white',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }) : React.createElement(IoIosPlay, {\n    size: 50,\n    style: {\n      transform: 'translateX(5px)'\n    },\n    color: 'white',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"jp-next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(IoMdSkipForward, {\n    size: 25,\n    color: 'white',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }))), React.createElement(PlayPanelRight, {\n    volume: volume,\n    defaultValue: defaultValue,\n    changeVolume: changeVolume,\n    loop: loop,\n    handleAudioLoop: handleAudioLoop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })))));\n};\n\nPlayPanel.propTypes = {\n  audioList: PropTypes.array,\n  currentAudio: PropTypes.number\n};\nexport default PlayPanel;","map":{"version":3,"sources":["/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanel.js"],"names":["React","useRef","useState","PropTypes","PlayPanelRight","PlayPanelProgressBar","PlayPanelAudioInfo","normalizeAudioCurentTime","IoIosPlay","IoIosPause","IoMdSkipForward","IoMdSkipBackward","PlayPanel","audioList","currentAudio","loop","audio","handleMetadata","handleTimeupdate","isPlaying","handlePlay","volume","defaultValue","changeVolume","handleAudioLoop","setAudioDuration","currentTrackMoment","currentTrackDuration","display","transform","propTypes","array","number"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport PropTypes from 'prop-types';\n\n// import Vizyalization from \"../AudioVizyalizations/Vizyalization\";\n\nimport PlayPanelRight from './PlayPanelRight'\nimport PlayPanelProgressBar from './PlayPanelProgressBar'\nimport PlayPanelAudioInfo from './PlayPanelAudioInfo'\nimport {normalizeAudioCurentTime} from '../../helpers/helpers';\nimport './playerPanel.scss';\n\nimport {\n    IoIosPlay,\n    IoIosPause,\n    IoMdSkipForward,\n    IoMdSkipBackward\n} from \"react-icons/io\";\n\nconst PlayPanel = ({\n                       audioList,\n                       currentAudio,\n                       loop,\n                       audio,\n                       handleMetadata,\n                       handleTimeupdate,\n                       isPlaying,\n                       handlePlay,\n                       volume,\n                       defaultValue,\n                       changeVolume,\n                       handleAudioLoop,\n                       setAudioDuration,\n                       currentTrackMoment,\n                       currentTrackDuration\n                   }) => {\n\n    return (\n        <div className=\"ms_player_wrapper\">\n            <div className=\"ms_player_close\">\n                <i className=\"fa fa-angle-up\" aria-hidden=\"true\"/>\n            </div>\n            <div className=\"player_mid\">\n                <div className=\"audio-player\">\n\n                    <div className=\"jp-jplayer\" style={{display: 'none'}}>\n\n                        {/*<audio*/}\n                        {/*loop={loop}*/}\n                        {/*ref={audioPlayer}*/}\n                        {/*preload=\"metadata\"*/}\n                        {/*onLoadedMetadata={handleMetadata}*/}\n                        {/*onTimeUpdate={() => handleTimeupdate()}*/}\n                        {/*>*/}\n                        {/*<source*/}\n                        {/*src={audioList[currentAudio].url}*/}\n                        {/*type=\"audio/ogg\"*/}\n                        {/*/>*/}\n                        {/*Ooops, your browser is sooo old.*/}\n                        {/*</audio>*/}\n                    </div>\n\n                    <div className='jp-audio'>\n\n                        <PlayPanelProgressBar\n                            audio={audio}\n                            setAudioDuration={setAudioDuration}\n                        />\n\n                        <PlayPanelAudioInfo\n                            isPlaying={isPlaying}\n                            currentTrackDuration={currentTrackDuration || '0:00'}\n                            currentTrackMoment={normalizeAudioCurentTime(currentTrackMoment)}\n                            audio={audio}\n                        />\n\n                        <div className=\"jp-controls flex-item\">\n                            <button className=\"jp-previous\">\n                                <IoMdSkipBackward size={25} color={'white'}/>\n                            </button>\n\n                            <button\n                                className=\"jp-play\"\n                                onClick={handlePlay}\n                            >\n                                {isPlaying\n                                    ? <IoIosPause size={50} style={{transform: 'translateX(2px)'}} color={'white'}/>\n                                    : <IoIosPlay size={50} style={{transform: 'translateX(5px)'}} color={'white'}/>\n                                }\n\n                            </button>\n\n                            <button className=\"jp-next\">\n                                <IoMdSkipForward size={25} color={'white'}/>\n                            </button>\n                        </div>\n\n                        <PlayPanelRight\n                            volume={volume}\n                            defaultValue={defaultValue}\n                            changeVolume={changeVolume}\n\n                            loop={loop}\n                            handleAudioLoop={handleAudioLoop}\n                        />\n\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nPlayPanel.propTypes = {\n    audioList: PropTypes.array,\n    currentAudio: PropTypes.number,\n};\n\nexport default PlayPanel;\n\n\n"]},"metadata":{},"sourceType":"module"}