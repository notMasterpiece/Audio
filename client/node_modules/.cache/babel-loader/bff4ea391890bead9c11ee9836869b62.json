{"ast":null,"code":"import _taggedTemplateLiteral from \"/Grawdanin/MERN/audio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanelProgressBar.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  .rc-slider {\\n    padding: 0;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'rc-slider';\nimport styled from 'styled-components';\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nconst PlayPanelProgressBar = ({\n  currentTrackDuration\n}) => {\n  const currentTrackDurationNumber = currentTrackDuration.replace(':', '.');\n  console.log(currentTrackDurationNumber);\n  console.log(typeof currentTrackDurationNumber);\n  if (!currentTrackDuration) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"loading\");\n  return React.createElement(ProgresWrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(SliderWithTooltip, {\n    min: 0,\n    max: parseFloat(currentTrackDuration),\n    step: 0.01,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nPlayPanelProgressBar.propTypes = {};\nconst ProgresWrap = styled.div(_templateObject());\nexport default PlayPanelProgressBar;","map":{"version":3,"sources":["/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanelProgressBar.js"],"names":["React","PropTypes","Slider","styled","createSliderWithTooltip","SliderWithTooltip","PlayPanelProgressBar","currentTrackDuration","currentTrackDurationNumber","replace","console","log","parseFloat","propTypes","ProgresWrap","div"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,uBAAuB,GAAGF,MAAM,CAACE,uBAAvC;AACA,MAAMC,iBAAiB,GAAGD,uBAAuB,CAACF,MAAD,CAAjD;;AAEA,MAAMI,oBAAoB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA4B;AAErD,QAAMC,0BAA0B,GAAGD,oBAAoB,CAACE,OAArB,CAA6B,GAA7B,EAAiC,GAAjC,CAAnC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,0BAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,0BAAnB;AAGA,MAAI,CAACD,oBAAL,EAA2B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAE3B,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AACI,IAAA,GAAG,EAAE,CADT;AAEI,IAAA,GAAG,EAAEK,UAAU,CAACL,oBAAD,CAFnB;AAGI,IAAA,IAAI,EAAE,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AASH,CAnBD;;AAqBAD,oBAAoB,CAACO,SAArB,GAAiC,EAAjC;AAKA,MAAMC,WAAW,GAAGX,MAAM,CAACY,GAAV,mBAAjB;AAUA,eAAeT,oBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider  from 'rc-slider';\nimport styled from 'styled-components';\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nconst PlayPanelProgressBar = ({currentTrackDuration}) => {\n\n    const currentTrackDurationNumber = currentTrackDuration.replace(':','.');\n\n    console.log(currentTrackDurationNumber);\n    console.log(typeof currentTrackDurationNumber);\n\n\n    if (!currentTrackDuration) return <p>loading</p>\n\n    return (\n        <ProgresWrap>\n            <SliderWithTooltip\n                min={0}\n                max={parseFloat(currentTrackDuration)}\n                step={0.01}\n            />\n        </ProgresWrap>\n    );\n};\n\nPlayPanelProgressBar.propTypes = {\n\n};\n\n\nconst ProgresWrap = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  .rc-slider {\n    padding: 0;\n  }\n`;\n\nexport default PlayPanelProgressBar;"]},"metadata":{},"sourceType":"module"}