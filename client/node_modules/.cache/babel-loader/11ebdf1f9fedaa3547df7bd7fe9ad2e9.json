{"ast":null,"code":"import _slicedToArray from \"/Grawdanin/MERN/audio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanel.js\";\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlayPanelVolume from './PlayPanelVolume';\nimport PlayPanelProgressBar from './PlayPanelProgressBar';\nimport { normalizeAudioCurentTime } from '../../helpers/helpers';\nimport './playerPanel.scss';\nimport m from '../../assets/audio/_Лучшая Музыка 2019 🌴 Зарубежные песни Хиты 🌴 Популярные Песни Слушать Бесплатно 2019_.mp3';\nimport Vizyalization from \"../AudioVizyalization/Vizyalization\";\nimport { audioSetup } from \"../AudioVizyalization/animation\";\nconst m1 = 'https://res.cloudinary.com/g-r-a-w-d-a-n-i-n/video/upload/v1561551649/MEGA_HITS_2019_Summer_Special_DG_Mix_2019_Best_Of_Deep_House_Sessions_Music_Chill_Out_Mix.mp3';\nconst smoothingTimeConstant = 0.65;\nconst fftSize = 8192; //32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768\n\nconst PlayPanel = () => {\n  let audioPlayer = useRef();\n  const defaultValue = 60;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isPlaying = _useState2[0],\n        setIsPlaying = _useState2[1];\n\n  const _useState3 = useState(defaultValue),\n        _useState4 = _slicedToArray(_useState3, 2),\n        volume = _useState4[0],\n        setVolume = _useState4[1];\n\n  const _useState5 = useState('0'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        progressBarWidth = _useState6[0],\n        setProgressBarWidth = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentTrackDuration = _useState8[0],\n        setCurrentTrackDuration = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        currentTrackMoment = _useState10[0],\n        setCurrentTrackMoment = _useState10[1];\n\n  const handlePlay = () => {\n    const audioRef = audioPlayer.current;\n    audioRef.src = audioRef.currentSrc;\n    let audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    let analyser = audioContext.createAnalyser();\n    analyser.connect(audioContext.destination);\n    analyser.smoothingTimeConstant = smoothingTimeConstant;\n    analyser.fftSize = fftSize;\n    let analyserBufferLength = analyser.frequencyBinCount;\n    let audioSrc = audioContext.createMediaElementSource(audioRef);\n    audioSrc.connect(analyser);\n    audioSetup(audioRef, analyser);\n\n    if (audioRef.paused || audioRef.ended) {\n      audioRef.play();\n      setIsPlaying(true);\n    } else {\n      audioRef.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  const changeVolume = value => {\n    setVolume(value);\n    audioPlayer.current.volume = value / 100;\n  };\n\n  const handleMetadata = () => {\n    const audio = audioPlayer.current;\n    const duration = Math.floor(audio.duration);\n    setCurrentTrackDuration(normalizeAudioCurentTime(duration));\n  };\n\n  const setAudioDuration = diration => {\n    console.log(diration);\n    audioPlayer.current.currentTime = diration;\n  };\n\n  const handleTimeupdate = () => {\n    setCurrentTrackMoment(Math.floor(audioPlayer.current.currentTime));\n    setProgressBarWidth(audioPlayer.current.currentTime / audioPlayer.current.duration * 100 + '%');\n\n    if (audioPlayer.current.currentTime === audioPlayer.current.duration) {\n      alert('end');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"ms_player_wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ms_player_close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-angle-up\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"player_mid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"audio-player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-jplayer\",\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"audio\", {\n    ref: audioPlayer,\n    preload: \"metadata\",\n    onLoadedMetadata: handleMetadata,\n    onTimeUpdate: () => handleTimeupdate(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: m1,\n    type: \"audio/ogg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), \"Ooops, your browser is sooo old.\")), audioPlayer.current && React.createElement(\"div\", {\n    className: \"\".concat(isPlaying ? 'jp-state-playing' : '', \" jp-audio\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Vizyalization, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(PlayPanelProgressBar, {\n    audio: audioPlayer.current,\n    setAudioDuration: setAudioDuration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"jp-type-playlist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-gui jp-interface flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-controls flex-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"jp-previous\",\n    tabIndex: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ms_play_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"jp-play\",\n    onClick: handlePlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ms_play_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"jp-next\",\n    tabIndex: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ms_play_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"jp-progress-container flex-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-time-holder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"jp-current-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, normalizeAudioCurentTime(currentTrackMoment)), React.createElement(\"span\", {\n    className: \"jp-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, currentTrackDuration || '0 : 00')), React.createElement(\"div\", {\n    className: \"jp-progress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-seek-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-play-bar\",\n    style: {\n      width: progressBarWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bullet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"jp-toggles flex-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"jp-shuffle\",\n    tabIndex: \"0\",\n    title: \"Shuffle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ms_play_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"jp-repeat\",\n    tabIndex: \"0\",\n    title: \"Repeat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ms_play_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }))), React.createElement(PlayPanelVolume, {\n    volume: volume,\n    defaultValue: defaultValue,\n    changeVolume: changeVolume,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })))))));\n};\n\nPlayPanel.propTypes = {};\nexport default PlayPanel;","map":{"version":3,"sources":["/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanel.js"],"names":["React","useRef","useState","PropTypes","PlayPanelVolume","PlayPanelProgressBar","normalizeAudioCurentTime","m","Vizyalization","audioSetup","m1","smoothingTimeConstant","fftSize","PlayPanel","audioPlayer","defaultValue","isPlaying","setIsPlaying","volume","setVolume","progressBarWidth","setProgressBarWidth","currentTrackDuration","setCurrentTrackDuration","currentTrackMoment","setCurrentTrackMoment","handlePlay","audioRef","current","src","currentSrc","audioContext","window","AudioContext","webkitAudioContext","analyser","createAnalyser","connect","destination","analyserBufferLength","frequencyBinCount","audioSrc","createMediaElementSource","paused","ended","play","pause","changeVolume","value","handleMetadata","audio","duration","Math","floor","setAudioDuration","diration","console","log","currentTime","handleTimeupdate","alert","display","width","propTypes"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport PlayPanelVolume from './PlayPanelVolume'\nimport PlayPanelProgressBar from './PlayPanelProgressBar'\nimport {normalizeAudioCurentTime} from '../../helpers/helpers';\nimport './playerPanel.scss';\nimport m from '../../assets/audio/_Лучшая Музыка 2019 🌴 Зарубежные песни Хиты 🌴 Популярные Песни Слушать Бесплатно 2019_.mp3';\n\n\nimport Vizyalization from \"../AudioVizyalization/Vizyalization\";\nimport {audioSetup} from \"../AudioVizyalization/animation\";\n\n\nconst m1 = 'https://res.cloudinary.com/g-r-a-w-d-a-n-i-n/video/upload/v1561551649/MEGA_HITS_2019_Summer_Special_DG_Mix_2019_Best_Of_Deep_House_Sessions_Music_Chill_Out_Mix.mp3';\n\nconst smoothingTimeConstant = 0.65;\nconst fftSize = 8192;//32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768\n\n\n\nconst PlayPanel = () => {\n\n    let audioPlayer = useRef();\n    const defaultValue = 60;\n\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [volume, setVolume] = useState(defaultValue);\n    const [progressBarWidth, setProgressBarWidth] = useState('0');\n    const [currentTrackDuration, setCurrentTrackDuration] = useState(0);\n    const [currentTrackMoment, setCurrentTrackMoment] = useState(0);\n\n\n\n    const handlePlay = () => {\n\n        const audioRef = audioPlayer.current;\n\n        audioRef.src = audioRef.currentSrc;\n\n\n        let audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        let analyser = audioContext.createAnalyser();\n\n        analyser.connect(audioContext.destination);\n        analyser.smoothingTimeConstant = smoothingTimeConstant;\n        analyser.fftSize = fftSize;\n        let analyserBufferLength = analyser.frequencyBinCount;\n\n        let audioSrc = audioContext.createMediaElementSource(audioRef);\n        audioSrc.connect(analyser);\n\n        audioSetup(audioRef, analyser);\n\n\n\n\n        if (audioRef.paused || audioRef.ended) {\n            audioRef.play();\n            setIsPlaying(true);\n        } else {\n            audioRef.pause();\n            setIsPlaying(false);\n        }\n    };\n\n\n    const changeVolume = value => {\n        setVolume(value);\n        audioPlayer.current.volume = value / 100\n    };\n\n    const handleMetadata = () => {\n        const audio = audioPlayer.current;\n\n        const duration = Math.floor(audio.duration);\n        setCurrentTrackDuration(normalizeAudioCurentTime(duration));\n    };\n\n\n    const setAudioDuration = diration => {\n        console.log(diration);\n        audioPlayer.current.currentTime = diration;\n    };\n\n\n    const handleTimeupdate = () => {\n        setCurrentTrackMoment(Math.floor(audioPlayer.current.currentTime));\n        setProgressBarWidth(\n            (audioPlayer.current.currentTime / audioPlayer.current.duration) * 100 + '%'\n        );\n        if (audioPlayer.current.currentTime === audioPlayer.current.duration) {\n            alert('end');\n        }\n    };\n\n    return (\n\n        <div className=\"ms_player_wrapper\">\n            <div className=\"ms_player_close\">\n                <i className=\"fa fa-angle-up\" aria-hidden=\"true\"/>\n            </div>\n            <div className=\"player_mid\">\n                <div className=\"audio-player\">\n\n                    <div className=\"jp-jplayer\" style={{display: 'none'}}>\n\n                        <audio\n                            ref={audioPlayer}\n                            preload=\"metadata\"\n                            onLoadedMetadata={handleMetadata}\n                            onTimeUpdate={() => handleTimeupdate()}\n                        >\n                            <source\n                                src={m1}\n                                type=\"audio/ogg\"\n                            />\n                            Ooops, your browser is sooo old.\n                        </audio>\n                    </div>\n\n                    {audioPlayer.current && (\n                        <div className={`${isPlaying ? 'jp-state-playing' : ''} jp-audio`}>\n\n                            <Vizyalization />\n\n\n                            <PlayPanelProgressBar\n                                audio={audioPlayer.current}\n                                setAudioDuration={setAudioDuration}\n                            />\n\n                            <div className=\"jp-type-playlist\">\n                                <div className=\"jp-gui jp-interface flex-wrap\">\n                                    <div className=\"jp-controls flex-item\">\n                                        <button className=\"jp-previous\" tabIndex=\"0\">\n                                            <i className=\"ms_play_control\"/>\n                                        </button>\n\n                                        <button\n                                            className=\"jp-play\"\n                                            onClick={handlePlay}\n                                        >\n                                            <i className=\"ms_play_control\"/>\n                                        </button>\n\n                                        <button className=\"jp-next\" tabIndex=\"0\">\n                                            <i className=\"ms_play_control\"/>\n                                        </button>\n                                    </div>\n                                    <div className=\"jp-progress-container flex-item\">\n                                        <div className=\"jp-time-holder\">\n                                        <span className=\"jp-current-time\">\n                                            {normalizeAudioCurentTime(currentTrackMoment)}\n                                        </span>\n                                            <span className=\"jp-duration\">\n                                            {currentTrackDuration || '0 : 00'}\n                                        </span>\n                                        </div>\n\n\n                                        <div className=\"jp-progress\">\n                                            <div className=\"jp-seek-bar\">\n                                                <div className=\"jp-play-bar\" style={{width: progressBarWidth}}>\n                                                    <div className=\"bullet\">\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n\n                                    <div className=\"jp-toggles flex-item\">\n                                        <button className=\"jp-shuffle\" tabIndex=\"0\" title=\"Shuffle\">\n                                            <i className=\"ms_play_control\"/></button>\n                                        <button className=\"jp-repeat\" tabIndex=\"0\" title=\"Repeat\"><i\n                                            className=\"ms_play_control\"/></button>\n                                    </div>\n\n                                    <PlayPanelVolume\n                                        volume={volume}\n                                        defaultValue={defaultValue}\n                                        changeVolume={changeVolume}/>\n\n                                </div>\n                            </div>\n                        </div>\n                    )}\n\n                </div>\n            </div>\n\n        </div>\n);\n};\n\nPlayPanel.propTypes = {\n\n};\n\nexport default PlayPanel;\n\n\n    "]},"metadata":{},"sourceType":"module"}