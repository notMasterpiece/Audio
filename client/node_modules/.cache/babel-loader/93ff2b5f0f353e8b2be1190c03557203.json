{"ast":null,"code":"var audio, audioContext, audioSrc;\nvar analyser, analyserBufferLength;\nvar audioInfo = 'Song: LAKEY INSPIRED - Chill Day'; //---\n\nvar MATHPI2 = Math.PI * 2; //---\n\nvar w;\nvar h;\nvar btStart;\nvar btLoadAudio;\nvar labelLoadAudio;\nvar txtStatus;\nvar canvas;\nvar context;\nvar imageData;\nvar data;\nvar mouseActive = false;\nvar mouseDown = false;\nvar mousePos = {\n  x: 0,\n  y: 0\n};\nvar fov = 250;\nvar speed = 0.75; //0.25;\n\nvar cubeMinHeight = 2;\nvar frequencyDamp = 25;\nvar smoothingTimeConstant = 0.65;\nvar fftSize = 8192; //32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768\n\nvar circleHolder = [];\nvar time = 0;\nvar colorInvertValue = 0;\nvar rgb = {};\nrgb.r = Math.random() * MATHPI2;\nrgb.g = Math.random() * MATHPI2;\nrgb.b = Math.random() * MATHPI2;\nvar rgb2 = {};\nrgb2.r = Math.random() * MATHPI2;\nrgb2.g = Math.random() * MATHPI2;\nrgb2.b = Math.random() * MATHPI2; //---\n\n/*\nfunction getRGBColor() {\n\n  var r = Math.sin( rgb.r += 0.010 ) * 1 + 1;\n  var g = Math.sin( rgb.g += 0.007 ) * 1 + 1;\n  var b = Math.sin( rgb.b += 0.013 ) * 1 + 1;\n  //var r = Math.sin( rgb.r += 0.040 ) * 1 + 1;\n  //var g = Math.sin( rgb.g += 0.028 ) * 1 + 1;\n  //var b = Math.sin( rgb.b += 0.052 ) * 1 + 1;\n\n  return { r:r, g:g, b:b };\n\n};*/\n\nfunction getRGBColor(color) {\n  var r = Math.sin(color.r += 0.010) * 1 + 1;\n  var g = Math.sin(color.g += 0.007) * 1 + 1;\n  var b = Math.sin(color.b += 0.013) * 1 + 1; //var r = Math.sin( color.r += 0.040 ) * 1 + 1;\n  //var g = Math.sin( color.g += 0.028 ) * 1 + 1;\n  //var b = Math.sin( color.b += 0.052 ) * 1 + 1;\n\n  return {\n    r: r,\n    g: g,\n    b: b\n  };\n}\n\n;\n\nfunction getRGBColor2(color) {\n  //var r = Math.sin( color.r += 0.010 ) * 1 + 1;\n  //var g = Math.sin( color.g += 0.007 ) * 1 + 1;\n  //var b = Math.sin( color.b += 0.013 ) * 1 + 1;\n  var r = Math.sin(color.r += 0.040) * 1 + 1;\n  var g = Math.sin(color.g += 0.028) * 1 + 1;\n  var b = Math.sin(color.b += 0.052) * 1 + 1;\n  return {\n    r: r,\n    g: g,\n    b: b\n  };\n}\n\n;\n\nfunction limitRGBColor(color, percent = 0.45) {\n  if (color.r < percent) {\n    color.r = percent;\n  }\n\n  if (color.g < percent) {\n    color.g = percent;\n  }\n\n  if (color.b < percent) {\n    color.b = percent;\n  }\n}\n\n;\nexport const init = () => {\n  canvas = document.createElement('canvas');\n  canvas.classList.add('audio-canvas');\n  canvas.addEventListener('mousedown', mouseDownHandler, false);\n  canvas.addEventListener('mouseup', mouseUpHandler, false);\n  canvas.addEventListener('mousemove', mouseMoveHandler, false);\n  canvas.addEventListener('mouseenter', mouseEnterHandler, false);\n  canvas.addEventListener('mouseleave', mouseLeaveHandler, false);\n  document.body.appendChild(canvas);\n  context = canvas.getContext('2d');\n  window.addEventListener('resize', onResize, false);\n  onResize();\n  addCircles();\n  render();\n  clearImageData();\n  render();\n  context.putImageData(imageData, 0, 0);\n  animate();\n}; //---\n\nexport const audioSetup = (audioRef, aa) => {\n  audio = audioRef;\n  analyser = aa;\n\n  if (audio) {\n    audio.pause();\n  }\n\n  audio = new Audio();\n  audio.src = musik.currentSrc;\n  audio.controls = false;\n  audio.loop = true;\n  audio.play();\n  audio.crossOrigin = 'anonymous';\n  audio.addEventListener('canplaythrough', audioLoaded, false);\n  audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  analyser = audioContext.createAnalyser();\n  analyser.connect(audioContext.destination);\n  analyser.smoothingTimeConstant = smoothingTimeConstant;\n  analyser.fftSize = fftSize;\n  analyserBufferLength = analyser.frequencyBinCount;\n  audioSrc = audioContext.createMediaElementSource(audio);\n  audioSrc.connect(analyser);\n};\n\nfunction clearImageData() {\n  for (var i = 0, l = data.length; i < l; i += 4) {\n    data[i] = 0;\n    data[i + 1] = 0;\n    data[i + 2] = 0;\n    data[i + 3] = 255;\n  }\n}\n\n;\n\nfunction setPixel(x, y, r, g, b, a) {\n  var i = (x + y * imageData.width) * 4;\n  data[i] = r;\n  data[i + 1] = g;\n  data[i + 2] = b;\n  data[i + 3] = a;\n}\n\n; //---\n\nfunction drawLine(x1, y1, x2, y2, r, g, b, a) {\n  var dx = Math.abs(x2 - x1);\n  var dy = Math.abs(y2 - y1);\n  var sx = x1 < x2 ? 1 : -1;\n  var sy = y1 < y2 ? 1 : -1;\n  var err = dx - dy;\n  var lx = x1;\n  var ly = y1;\n\n  while (true) {\n    if (lx > 0 && lx < w && ly > 0 && ly < h) {\n      setPixel(lx, ly, r, g, b, a);\n    }\n\n    if (lx === x2 && ly === y2) break;\n    var e2 = 2 * err;\n\n    if (e2 > -dx) {\n      err -= dy;\n      lx += sx;\n    }\n\n    if (e2 < dy) {\n      err += dx;\n      ly += sy;\n    }\n  }\n}\n\n; //---\n\nfunction getCirclePosition(centerX, centerY, radius, index, segments) {\n  var angle = index * (MATHPI2 / segments) + time;\n  var x = centerX + Math.cos(angle) * radius;\n  var y = centerY + Math.sin(angle) * radius;\n  return {\n    x: x,\n    y: y\n  };\n}\n\n;\n\nfunction drawCircle(centerPosition, radius, segments) {\n  var coordinates = [];\n  var radiusSave;\n  var diff = 0; //Math.floor( Math.random() * segments );\n\n  for (var i = 0; i <= segments; i++) {\n    //var radiusRandom = radius + Math.random() * ( radius / 8 );\n    //var radiusRandom = radius + Math.random() * ( radius / 32 );\n    var radiusRandom = radius; // + ( radius / 8 );\n\n    if (i === 0) {\n      radiusSave = radiusRandom;\n    }\n\n    if (i === segments) {\n      radiusRandom = radiusSave;\n    }\n\n    var centerX = centerPosition.x;\n    var centerY = centerPosition.y;\n    var position = getCirclePosition(centerX, centerY, radiusRandom, i, segments);\n    coordinates.push({\n      x: position.x,\n      y: position.y,\n      index: i + diff,\n      radius: radiusRandom,\n      segments: segments\n    });\n  }\n\n  return coordinates;\n}\n\n;\n\nfunction addCircleSegment(x, y, z, audioBufferIndex) {\n  var circleSegment = {};\n  circleSegment.x = x;\n  circleSegment.y = y; //circleSegment.z = z;\n\n  circleSegment.x2d = 0;\n  circleSegment.y2d = 0;\n  circleSegment.audioBufferIndex = audioBufferIndex;\n  return circleSegment;\n}\n\n;\n\nfunction addCircles() {\n  var audioBufferIndexMin = 8;\n  var audioBufferIndexMax = 1024;\n  var audioBufferIndex = audioBufferIndexMin;\n  var centerPosition = {\n    x: 0,\n    y: 0\n  };\n  var center = {\n    x: 0,\n    y: 0\n  };\n  var toggle = 1;\n  var index = 0;\n  var audioIndex = audioBufferIndexMin;\n  var mp = {\n    x: Math.random() * w,\n    y: Math.random() * h\n  };\n\n  for (var z = -fov; z < fov; z += 5) {\n    var coordinates = drawCircle(centerPosition, 75, 64);\n    var circleObj = {};\n    circleObj.segmentsOutside = [];\n    circleObj.segmentsInside = [];\n    circleObj.segmentsInside2 = [];\n    circleObj.segmentsCount = 0;\n    circleObj.index = index; //circleObj.audioIndex = audioIndex;\n\n    circleObj.z = z;\n    circleObj.center = center;\n    circleObj.circleCenter = {\n      x: 0,\n      y: 0\n    };\n    circleObj.mp = {\n      x: mp.x,\n      y: mp.y\n    };\n    circleObj.radius = coordinates[0].radius; //circleObj.radiusAudio = circleObj.radius;\n\n    circleObj.color = {\n      r: 0,\n      g: 0,\n      b: 0\n    }; //toggle = index % 4;\n\n    toggle = index % 2;\n    index++;\n\n    if (z < 0) {\n      audioIndex++;\n    } else {\n      audioIndex--;\n    }\n\n    audioBufferIndex = Math.floor(Math.random() * audioBufferIndexMax) + audioBufferIndexMin; //audioBufferIndex = audioBufferIndexMin;\n\n    var circleSegmentOutside;\n\n    for (var i = 0, l = coordinates.length; i < l; i++) {\n      var coordinate = coordinates[i]; //if ( i % 4 === toggle && i % 2 === 1 ) {\n\n      if (i % 2 === toggle) {\n        circleSegmentOutside = addCircleSegment(coordinate.x, coordinate.y, z, audioBufferIndex);\n        circleSegmentOutside.active = true;\n        circleSegmentOutside.index = coordinate.index;\n        circleSegmentOutside.radius = coordinate.radius;\n        circleSegmentOutside.radiusAudio = circleSegmentOutside.radius; // + Math.random() * 15;\n\n        circleSegmentOutside.segments = coordinate.segments;\n        circleSegmentOutside.coordinates = [];\n        var co;\n\n        if (i > 0) {\n          co = coordinates[i - 1];\n        } else {\n          co = coordinates[l - 1];\n        }\n\n        var sub1 = addCircleSegment(co.x, co.y, z, audioBufferIndex);\n        var sub2 = addCircleSegment(coordinate.x, coordinate.y, z - 5, audioBufferIndex);\n        var sub3 = addCircleSegment(co.x, co.y, z - 5, audioBufferIndex);\n        var sub4 = addCircleSegment(coordinate.x, coordinate.y, z, audioBufferIndex);\n        var sub5 = addCircleSegment(co.x, co.y, z, audioBufferIndex);\n        var sub6 = addCircleSegment(coordinate.x, coordinate.y, z - 5, audioBufferIndex);\n        var sub7 = addCircleSegment(co.x, co.y, z - 5, audioBufferIndex);\n        sub1.index = co.index;\n        sub2.index = coordinate.index;\n        sub3.index = co.index;\n        sub4.index = coordinate.index;\n        sub5.index = co.index;\n        sub6.index = coordinate.index;\n        sub7.index = co.index;\n        circleSegmentOutside.subs = [];\n        circleSegmentOutside.subs.push(sub1, sub2, sub3, sub4, sub5, sub6, sub7); //audioBufferIndex = Math.floor( Math.random() * audioBufferIndexMax ) + audioBufferIndexMin;\n\n        if (i < l - 1) {\n          audioBufferIndex = Math.floor(Math.random() * audioBufferIndexMax) + audioBufferIndexMin;\n        } else {\n          audioBufferIndex = circleObj.segmentsOutside[0].audioBufferIndex;\n        }\n\n        circleObj.segmentsOutside.push(circleSegmentOutside);\n      } else {\n        circleObj.segmentsOutside.push({\n          active: false\n        });\n      }\n    }\n\n    circleHolder.push(circleObj);\n  }\n}\n\n;\n\nfunction onResize() {\n  w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n  h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n  canvas.width = w;\n  canvas.height = h;\n  context.fillStyle = '#000000';\n  context.fillRect(0, 0, w, h);\n  imageData = context.getImageData(0, 0, w, h);\n  data = imageData.data;\n}\n\n;\n\nfunction mouseDownHandler(event) {\n  mouseDown = true;\n}\n\n;\n\nfunction mouseUpHandler(event) {\n  mouseDown = false;\n}\n\n;\n\nfunction mouseEnterHandler(event) {\n  mouseActive = true;\n}\n\n;\n\nfunction mouseLeaveHandler(event) {\n  mouseActive = false; //mousePos.x = w / 2;\n  //mousePos.y = h / 2;\n\n  mouseDown = false;\n}\n\n;\n\nfunction mouseMoveHandler(event) {\n  mousePos = getMousePos(canvas, event);\n}\n\n;\n\nfunction getMousePos(canvas, event) {\n  var rect = canvas.getBoundingClientRect();\n  return {\n    x: event.clientX - rect.left,\n    y: event.clientY - rect.top\n  };\n}\n\n; //---\n\nfunction render() {\n  var aa = false;\n\n  if (analyser) {\n    aa = true;\n  }\n\n  var frequencySource;\n\n  if (aa === true) {\n    frequencySource = new Uint8Array(analyser.frequencyBinCount);\n    analyser.getByteFrequencyData(frequencySource);\n  } //---\n\n\n  var sortArray = false; //---\n\n  var col = getRGBColor2(rgb);\n  var col2 = getRGBColor(rgb2);\n  limitRGBColor(col, 0.45);\n  limitRGBColor(col2, 0.25); //---\n\n  for (var i = 0, l = circleHolder.length; i < l; i++) {\n    var circleObj = circleHolder[i];\n    circleObj.color.r = col.r - (circleObj.z + fov) / fov;\n    circleObj.color.g = col.g - (circleObj.z + fov) / fov;\n    circleObj.color.b = col.b - (circleObj.z + fov) / fov; //circleObj.color.r = Math.floor( ( ( ( col.r - circleObj.z + fov ) ) + ( col2.r - circleObj.z + fov ) ) / 2 );\n    //circleObj.color.g = Math.floor( ( ( ( col.g - circleObj.z + fov ) ) + ( col2.g - circleObj.z + fov ) ) / 2 );\n    //circleObj.color.b = Math.floor( ( ( ( col.b - circleObj.z + fov ) ) + ( col2.b - circleObj.z + fov ) ) / 2 );\n\n    if (circleObj.color.r < col2.r) {\n      circleObj.color.r = col2.r;\n    }\n\n    if (circleObj.color.g < col2.g) {\n      circleObj.color.g = col2.g;\n    }\n\n    if (circleObj.color.b < col2.b) {\n      circleObj.color.b = col2.b;\n    }\n\n    var circleObjBack;\n\n    if (i > 0) {\n      circleObjBack = circleHolder[i - 1];\n    } //---\n\n\n    if (mouseActive) {\n      circleObj.mp = mousePos;\n    } else {\n      circleObj.mp.x += (w / 2 - circleObj.mp.x) * 0.00025;\n      circleObj.mp.y += (h / 2 - circleObj.mp.y) * 0.00025;\n    } //circleObj.center.x = ( ( w / 2 ) - circleObj.mp.x ) * ( -i / 150 ) + w / 2;\n    //circleObj.center.y = ( ( h / 2 ) - circleObj.mp.y ) * ( -i / 150 ) + h / 2;\n\n\n    circleObj.center.x = (w / 2 - circleObj.mp.x) * ((circleObj.z - fov) / 500) + w / 2;\n    circleObj.center.y = (h / 2 - circleObj.mp.y) * ((circleObj.z - fov) / 500) + h / 2; //---\n\n    if (aa === true) {} //var f = frequencySource[ Math.floor(circleObj.z + fov) ];\n    //var f = frequencySource[ i ];\n    //var f = frequencySource[ circleObj.audioIndex ];\n    //var fAdd = (f / 25);// * ( (circleObj.z - fov) / 200 );\n    //circleObj.radiusAudio = fAdd;\n    //---\n\n\n    for (var j = 0, k = circleObj.segmentsOutside.length; j < k; j++) {\n      var circleSegmentOutside = circleObj.segmentsOutside[j];\n\n      if (circleSegmentOutside.active === true) {\n        //---\n        var scale = fov / (fov + circleObj.z);\n        var scaleBack;\n\n        if (i > 0) {\n          scaleBack = fov / (fov + circleObjBack.z);\n        }\n\n        var frequency, frequencyAdd;\n        circleSegmentOutside.x2d = circleSegmentOutside.x * scale + circleObj.center.x;\n        circleSegmentOutside.y2d = circleSegmentOutside.y * scale + circleObj.center.y; //---\n\n        if (aa === true) {\n          frequency = frequencySource[circleSegmentOutside.audioBufferIndex];\n          frequencyAdd = frequency / 20; //---\n\n          circleSegmentOutside.radiusAudio = circleSegmentOutside.radius - frequencyAdd;\n        } //---\n\n\n        var lineColorValue = 0;\n\n        if (j > 0) {\n          if (aa === true && audio.paused === false) {\n            lineColorValue = Math.round(i / l * (55 + frequency)); //255\n\n            if (lineColorValue > 255) {\n              lineColorValue = 255;\n            }\n          } else {\n            lineColorValue = Math.round(i / l * 200); //255\n          }\n        } //---\n\n\n        if (i > 0 && i < l - 1) {\n          var sub1 = circleSegmentOutside.subs[0];\n          var sub1angle = sub1.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n          sub1.x2d = sub1.x * scale + circleObj.center.x;\n          sub1.y2d = sub1.y * scale + circleObj.center.y;\n          sub1.x = circleObj.circleCenter.x + Math.cos(sub1angle) * circleSegmentOutside.radiusAudio;\n          sub1.y = circleObj.circleCenter.y + Math.sin(sub1angle) * circleSegmentOutside.radiusAudio;\n          var sub2 = circleSegmentOutside.subs[1];\n          var sub2angle = sub2.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n          sub2.x2d = sub2.x * scaleBack + circleObjBack.center.x;\n          sub2.y2d = sub2.y * scaleBack + circleObjBack.center.y;\n          sub2.x = circleObj.circleCenter.x + Math.cos(sub2angle) * circleSegmentOutside.radiusAudio;\n          sub2.y = circleObj.circleCenter.y + Math.sin(sub2angle) * circleSegmentOutside.radiusAudio;\n          var sub3 = circleSegmentOutside.subs[2];\n          var sub3angle = sub3.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n          sub3.x2d = sub3.x * scaleBack + circleObjBack.center.x;\n          sub3.y2d = sub3.y * scaleBack + circleObjBack.center.y;\n          sub3.x = circleObj.circleCenter.x + Math.cos(sub3angle) * circleSegmentOutside.radiusAudio;\n          sub3.y = circleObj.circleCenter.y + Math.sin(sub3angle) * circleSegmentOutside.radiusAudio;\n          var sub4 = circleSegmentOutside.subs[3];\n          var sub4angle = sub4.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n          sub4.x2d = sub4.x * scale + circleObj.center.x;\n          sub4.y2d = sub4.y * scale + circleObj.center.y;\n          sub4.x = circleObj.circleCenter.x + Math.cos(sub4angle) * circleSegmentOutside.radius;\n          sub4.y = circleObj.circleCenter.y + Math.sin(sub4angle) * circleSegmentOutside.radius;\n          var sub5 = circleSegmentOutside.subs[4];\n          var sub5angle = sub5.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n          sub5.x2d = sub5.x * scale + circleObj.center.x;\n          sub5.y2d = sub5.y * scale + circleObj.center.y;\n          sub5.x = circleObj.circleCenter.x + Math.cos(sub5angle) * circleSegmentOutside.radius;\n          sub5.y = circleObj.circleCenter.y + Math.sin(sub5angle) * circleSegmentOutside.radius;\n          var sub6 = circleSegmentOutside.subs[5];\n          var sub6angle = sub6.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n          sub6.x2d = sub6.x * scaleBack + circleObjBack.center.x;\n          sub6.y2d = sub6.y * scaleBack + circleObjBack.center.y;\n          sub6.x = circleObj.circleCenter.x + Math.cos(sub6angle) * circleSegmentOutside.radius;\n          sub6.y = circleObj.circleCenter.y + Math.sin(sub6angle) * circleSegmentOutside.radius;\n          var sub7 = circleSegmentOutside.subs[6];\n          var sub7angle = sub7.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n          sub7.x2d = sub7.x * scaleBack + circleObjBack.center.x;\n          sub7.y2d = sub7.y * scaleBack + circleObjBack.center.y;\n          sub7.x = circleObj.circleCenter.x + Math.cos(sub7angle) * circleSegmentOutside.radius;\n          sub7.y = circleObj.circleCenter.y + Math.sin(sub7angle) * circleSegmentOutside.radius;\n          var p1;\n          var p2;\n          var p3;\n          var p4;\n          var p5 = circleSegmentOutside.subs[3];\n          var p6 = circleSegmentOutside.subs[4];\n          var p7 = circleSegmentOutside.subs[6];\n          var p8 = circleSegmentOutside.subs[5];\n\n          if (frequencyAdd > 0) {\n            p1 = circleSegmentOutside;\n            p2 = circleSegmentOutside.subs[1];\n            p3 = circleSegmentOutside.subs[2];\n            p4 = circleSegmentOutside.subs[0];\n          }\n\n          var cr = Math.round(circleObj.color.r * lineColorValue);\n          var cg = Math.round(circleObj.color.g * lineColorValue);\n          var cb = Math.round(circleObj.color.b * lineColorValue);\n\n          if (frequencyAdd > 0) {\n            drawLine(p1.x2d | 0, p1.y2d | 0, p2.x2d | 0, p2.y2d | 0, cr, cg, cb, 255);\n            drawLine(p2.x2d | 0, p2.y2d | 0, p3.x2d | 0, p3.y2d | 0, cr, cg, cb, 255);\n            drawLine(p3.x2d | 0, p3.y2d | 0, p4.x2d | 0, p4.y2d | 0, cr, cg, cb, 255);\n            drawLine(p4.x2d | 0, p4.y2d | 0, p1.x2d | 0, p1.y2d | 0, cr, cg, cb, 255);\n            drawLine(p5.x2d | 0, p5.y2d | 0, p1.x2d | 0, p1.y2d | 0, cr, cg, cb, 255);\n            drawLine(p6.x2d | 0, p6.y2d | 0, p4.x2d | 0, p4.y2d | 0, cr, cg, cb, 255);\n            drawLine(p7.x2d | 0, p7.y2d | 0, p3.x2d | 0, p3.y2d | 0, cr, cg, cb, 255);\n            drawLine(p8.x2d | 0, p8.y2d | 0, p2.x2d | 0, p2.y2d | 0, cr, cg, cb, 255);\n          }\n\n          if (circleObj.z < fov / 2) {\n            drawLine(p5.x2d | 0, p5.y2d | 0, p6.x2d | 0, p6.y2d | 0, cr, cg, cb, 255);\n            drawLine(p6.x2d | 0, p6.y2d | 0, p7.x2d | 0, p7.y2d | 0, cr, cg, cb, 255);\n            drawLine(p7.x2d | 0, p7.y2d | 0, p8.x2d | 0, p8.y2d | 0, cr, cg, cb, 255);\n            drawLine(p8.x2d | 0, p8.y2d | 0, p5.x2d | 0, p5.y2d | 0, cr, cg, cb, 255);\n          }\n        } //---\n\n\n        var circleSegmentOutsideangle; //if ( j < k - 1 ) {\n\n        circleSegmentOutsideangle = circleSegmentOutside.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n        circleSegmentOutside.x = circleObj.circleCenter.x + Math.cos(circleSegmentOutsideangle) * circleSegmentOutside.radiusAudio;\n        circleSegmentOutside.y = circleObj.circleCenter.y + Math.sin(circleSegmentOutsideangle) * circleSegmentOutside.radiusAudio;\n        /*} else {\n           var circleSegmentOutside1 = circleObj.segmentsOutside[ 0 ];\n           circleSegmentOutsideangle = circleSegmentOutside1.index * ( MATHPI2 / circleSegmentOutside1.segments ) + time;\n           circleSegmentOutside.x = circleObj.circleCenter.x + Math.cos( circleSegmentOutsideangle ) * circleSegmentOutside1.radiusAudio;\n          circleSegmentOutside.y = circleObj.circleCenter.y + Math.sin( circleSegmentOutsideangle ) * circleSegmentOutside1.radiusAudio;\n            }\n        */\n        //---\n\n        /*\n        if ( i > 0 && i < l - 1 ) {\n        //if ( i > 0 && i < l - 1 && j < k - 1 ) {\n         var circleSegmentOutsideLineBack;// = circleObjBack[ j ];\n        var circleSegmentInsideLineBack;\n         //if ( j === 0 ) {\n           //pB = circleObjBack.segments[ circleObjBack.segments.length - 1 ];\n         //} else {\n           //pB = circleObjBack.segments[ j - 1 ];\n         //}\n         circleSegmentOutsideLineBack = circleObjBack.segmentsOutside[ j ];\n        circleSegmentInsideLineBack = circleObjBack.segmentsInside[ j ];\n         //drawLine( circleSegmentOutside.x2d | 0, circleSegmentOutside.y2d | 0, circleSegmentOutsideLineBack.x2d | 0, circleSegmentOutsideLineBack.y2d | 0, 0, Math.round( lineColorValue / 2 ), lineColorValue, 255 );\n        //drawLine( circleSegmentInside.x2d | 0, circleSegmentInside.y2d | 0, circleSegmentInsideLineBack.x2d | 0, circleSegmentInsideLineBack.y2d | 0, 0, Math.round( lineColorValue / 2 ), lineColorValue, 255 );\n        }\n        */\n      }\n    }\n\n    if (mouseDown) {\n      circleObj.z += speed;\n\n      if (circleObj.z > fov) {\n        circleObj.z -= fov * 2;\n        sortArray = true;\n      }\n    } else {\n      circleObj.z -= speed;\n\n      if (circleObj.z < -fov) {\n        circleObj.z += fov * 2;\n        sortArray = true;\n      }\n    }\n  } //---\n\n\n  if (sortArray) {\n    circleHolder = circleHolder.sort(function (a, b) {\n      return b.z - a.z;\n    });\n  } //---\n\n\n  if (mouseDown) {\n    time -= 0.005;\n  } else {\n    time += 0.005;\n  } //---\n  //soft invert colors\n\n\n  if (mouseDown) {\n    if (colorInvertValue < 255) colorInvertValue += 5;else colorInvertValue = 255;\n    softInvert(colorInvertValue);\n  } else {\n    if (colorInvertValue > 0) colorInvertValue -= 5;else colorInvertValue = 0;\n    if (colorInvertValue > 0) softInvert(colorInvertValue);\n  }\n}\n\n; //---\n\nfunction softInvert(value) {\n  for (var j = 0, n = data.length; j < n; j += 4) {\n    data[j] = Math.abs(value - data[j]); // red\n\n    data[j + 1] = Math.abs(value - data[j + 1]); // green\n\n    data[j + 2] = Math.abs(value - data[j + 2]); // blue\n\n    data[j + 3] = 255; // - data[ j + 3 ]; // alpha\n  }\n}\n\n; //---\n\nfunction animate() {\n  clearImageData();\n  render();\n  context.putImageData(imageData, 0, 0);\n  requestAnimationFrame(animate);\n}\n\n;\n\nwindow.requestAnimFrame = function () {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n    window.setTimeout(callback, 1000 / 60);\n  };\n}();","map":{"version":3,"sources":["/Grawdanin/MERN/audio/src/components/AudioVizyalization/animation.js"],"names":["audio","audioContext","audioSrc","analyser","analyserBufferLength","audioInfo","MATHPI2","Math","PI","w","h","btStart","btLoadAudio","labelLoadAudio","txtStatus","canvas","context","imageData","data","mouseActive","mouseDown","mousePos","x","y","fov","speed","cubeMinHeight","frequencyDamp","smoothingTimeConstant","fftSize","circleHolder","time","colorInvertValue","rgb","r","random","g","b","rgb2","getRGBColor","color","sin","getRGBColor2","limitRGBColor","percent","init","document","createElement","classList","add","addEventListener","mouseDownHandler","mouseUpHandler","mouseMoveHandler","mouseEnterHandler","mouseLeaveHandler","body","appendChild","getContext","window","onResize","addCircles","render","clearImageData","putImageData","animate","audioSetup","audioRef","aa","pause","Audio","src","musik","currentSrc","controls","loop","play","crossOrigin","audioLoaded","AudioContext","webkitAudioContext","createAnalyser","connect","destination","frequencyBinCount","createMediaElementSource","i","l","length","setPixel","a","width","drawLine","x1","y1","x2","y2","dx","abs","dy","sx","sy","err","lx","ly","e2","getCirclePosition","centerX","centerY","radius","index","segments","angle","cos","drawCircle","centerPosition","coordinates","radiusSave","diff","radiusRandom","position","push","addCircleSegment","z","audioBufferIndex","circleSegment","x2d","y2d","audioBufferIndexMin","audioBufferIndexMax","center","toggle","audioIndex","mp","circleObj","segmentsOutside","segmentsInside","segmentsInside2","segmentsCount","circleCenter","floor","circleSegmentOutside","coordinate","active","radiusAudio","co","sub1","sub2","sub3","sub4","sub5","sub6","sub7","subs","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","height","fillStyle","fillRect","getImageData","event","getMousePos","rect","getBoundingClientRect","clientX","left","clientY","top","frequencySource","Uint8Array","getByteFrequencyData","sortArray","col","col2","circleObjBack","j","k","scale","scaleBack","frequency","frequencyAdd","lineColorValue","paused","round","sub1angle","sub2angle","sub3angle","sub4angle","sub5angle","sub6angle","sub7angle","p1","p2","p3","p4","p5","p6","p7","p8","cr","cg","cb","circleSegmentOutsideangle","sort","softInvert","value","n","requestAnimationFrame","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout"],"mappings":"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","sourcesContent":["var audio, audioContext, audioSrc;\nvar analyser, analyserBufferLength;\nvar audioInfo = 'Song: LAKEY INSPIRED - Chill Day';\n\n//---\n\nvar MATHPI2 = Math.PI * 2;\n\n//---\n\nvar w;\nvar h;\n\nvar btStart;\nvar btLoadAudio;\nvar labelLoadAudio;\nvar txtStatus;\nvar canvas;\nvar context;\n\nvar imageData;\nvar data;\n\nvar mouseActive = false;\nvar mouseDown = false;\nvar mousePos = {x: 0, y: 0};\n\nvar fov = 250;\n\nvar speed = 0.75;//0.25;\n\nvar cubeMinHeight = 2;\n\nvar frequencyDamp = 25;\nvar smoothingTimeConstant = 0.65;\nvar fftSize = 8192;//32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768\n\nvar circleHolder = [];\n\nvar time = 0;\n\nvar colorInvertValue = 0;\n\nvar rgb = {};\nrgb.r = Math.random() * MATHPI2;\nrgb.g = Math.random() * MATHPI2;\nrgb.b = Math.random() * MATHPI2;\n\nvar rgb2 = {};\nrgb2.r = Math.random() * MATHPI2;\nrgb2.g = Math.random() * MATHPI2;\nrgb2.b = Math.random() * MATHPI2;\n\n//---\n/*\nfunction getRGBColor() {\n\n  var r = Math.sin( rgb.r += 0.010 ) * 1 + 1;\n  var g = Math.sin( rgb.g += 0.007 ) * 1 + 1;\n  var b = Math.sin( rgb.b += 0.013 ) * 1 + 1;\n  //var r = Math.sin( rgb.r += 0.040 ) * 1 + 1;\n  //var g = Math.sin( rgb.g += 0.028 ) * 1 + 1;\n  //var b = Math.sin( rgb.b += 0.052 ) * 1 + 1;\n\n  return { r:r, g:g, b:b };\n\n};*/\n\nfunction getRGBColor(color) {\n\n    var r = Math.sin(color.r += 0.010) * 1 + 1;\n    var g = Math.sin(color.g += 0.007) * 1 + 1;\n    var b = Math.sin(color.b += 0.013) * 1 + 1;\n    //var r = Math.sin( color.r += 0.040 ) * 1 + 1;\n    //var g = Math.sin( color.g += 0.028 ) * 1 + 1;\n    //var b = Math.sin( color.b += 0.052 ) * 1 + 1;\n\n    return {r: r, g: g, b: b};\n\n};\n\nfunction getRGBColor2(color) {\n\n    //var r = Math.sin( color.r += 0.010 ) * 1 + 1;\n    //var g = Math.sin( color.g += 0.007 ) * 1 + 1;\n    //var b = Math.sin( color.b += 0.013 ) * 1 + 1;\n    var r = Math.sin(color.r += 0.040) * 1 + 1;\n    var g = Math.sin(color.g += 0.028) * 1 + 1;\n    var b = Math.sin(color.b += 0.052) * 1 + 1;\n\n    return {r: r, g: g, b: b};\n\n};\n\nfunction limitRGBColor(color, percent = 0.45) {\n\n    if (color.r < percent) {\n\n        color.r = percent;\n\n    }\n\n    if (color.g < percent) {\n\n        color.g = percent;\n\n    }\n\n    if (color.b < percent) {\n\n        color.b = percent;\n\n    }\n\n};\n\nexport const init = () => {\n    canvas = document.createElement('canvas');\n    canvas.classList.add('audio-canvas');\n    canvas.addEventListener('mousedown', mouseDownHandler, false);\n    canvas.addEventListener('mouseup', mouseUpHandler, false);\n    canvas.addEventListener('mousemove', mouseMoveHandler, false);\n    canvas.addEventListener('mouseenter', mouseEnterHandler, false);\n    canvas.addEventListener('mouseleave', mouseLeaveHandler, false);\n\n    document.body.appendChild(canvas);\n\n    context = canvas.getContext('2d');\n\n    window.addEventListener('resize', onResize, false);\n\n    onResize();\n\n    addCircles();\n\n    render();\n\n    clearImageData();\n\n    render();\n\n    context.putImageData(imageData, 0, 0);\n\n    animate();\n};\n\n\n//---\n\nexport const audioSetup = (audioRef, aa) => {\n\n    audio = audioRef;\n    analyser = aa;\n\n\n    if (audio) {\n        audio.pause();\n    }\n\n    audio = new Audio();\n    audio.src = musik.currentSrc;\n\n    audio.controls = false;\n    audio.loop = true;\n    audio.play();\n    audio.crossOrigin = 'anonymous';\n    audio.addEventListener('canplaythrough', audioLoaded, false);\n\n    audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    analyser = audioContext.createAnalyser();\n    analyser.connect(audioContext.destination);\n    analyser.smoothingTimeConstant = smoothingTimeConstant;\n    analyser.fftSize = fftSize;\n    analyserBufferLength = analyser.frequencyBinCount;\n\n    audioSrc = audioContext.createMediaElementSource(audio);\n    audioSrc.connect(analyser);\n\n};\n\nfunction clearImageData() {\n\n    for (var i = 0, l = data.length; i < l; i += 4) {\n\n        data[i] = 0;\n        data[i + 1] = 0;\n        data[i + 2] = 0;\n        data[i + 3] = 255;\n\n    }\n\n};\n\nfunction setPixel(x, y, r, g, b, a) {\n\n    var i = (x + y * imageData.width) * 4;\n\n    data[i] = r;\n    data[i + 1] = g;\n    data[i + 2] = b;\n    data[i + 3] = a;\n\n};\n\n//---\n\nfunction drawLine(x1, y1, x2, y2, r, g, b, a) {\n\n    var dx = Math.abs(x2 - x1);\n    var dy = Math.abs(y2 - y1);\n\n    var sx = (x1 < x2) ? 1 : -1;\n    var sy = (y1 < y2) ? 1 : -1;\n\n    var err = dx - dy;\n\n    var lx = x1;\n    var ly = y1;\n\n    while (true) {\n\n        if (lx > 0 && lx < w && ly > 0 && ly < h) {\n\n            setPixel(lx, ly, r, g, b, a);\n\n        }\n\n        if ((lx === x2) && (ly === y2))\n            break;\n\n        var e2 = 2 * err;\n\n        if (e2 > -dx) {\n\n            err -= dy;\n            lx += sx;\n\n        }\n\n        if (e2 < dy) {\n\n            err += dx;\n            ly += sy;\n\n        }\n\n    }\n\n};\n\n//---\n\nfunction getCirclePosition(centerX, centerY, radius, index, segments) {\n\n    var angle = index * (MATHPI2 / segments) + time;\n\n    var x = centerX + Math.cos(angle) * radius;\n    var y = centerY + Math.sin(angle) * radius;\n\n    return {x: x, y: y};\n\n};\n\nfunction drawCircle(centerPosition, radius, segments) {\n\n    var coordinates = [];\n\n    var radiusSave;\n\n    var diff = 0;//Math.floor( Math.random() * segments );\n\n    for (var i = 0; i <= segments; i++) {\n\n        //var radiusRandom = radius + Math.random() * ( radius / 8 );\n        //var radiusRandom = radius + Math.random() * ( radius / 32 );\n        var radiusRandom = radius;// + ( radius / 8 );\n\n        if (i === 0) {\n\n            radiusSave = radiusRandom;\n\n        }\n\n        if (i === segments) {\n\n            radiusRandom = radiusSave;\n\n        }\n\n        var centerX = centerPosition.x;\n        var centerY = centerPosition.y;\n\n        var position = getCirclePosition(centerX, centerY, radiusRandom, i, segments);\n\n        coordinates.push({x: position.x, y: position.y, index: i + diff, radius: radiusRandom, segments: segments});\n\n    }\n\n    return coordinates;\n\n};\n\nfunction addCircleSegment(x, y, z, audioBufferIndex) {\n\n    var circleSegment = {};\n    circleSegment.x = x;\n    circleSegment.y = y;\n    //circleSegment.z = z;\n    circleSegment.x2d = 0;\n    circleSegment.y2d = 0;\n    circleSegment.audioBufferIndex = audioBufferIndex;\n\n    return circleSegment;\n\n};\n\nfunction addCircles() {\n\n    var audioBufferIndexMin = 8;\n    var audioBufferIndexMax = 1024;\n    var audioBufferIndex = audioBufferIndexMin;\n\n    var centerPosition = {x: 0, y: 0};\n    var center = {x: 0, y: 0};\n\n    var toggle = 1;\n    var index = 0;\n    var audioIndex = audioBufferIndexMin;\n\n    var mp = {x: Math.random() * w, y: Math.random() * h};\n\n    for (var z = -fov; z < fov; z += 5) {\n\n        var coordinates = drawCircle(centerPosition, 75, 64);\n\n        var circleObj = {};\n        circleObj.segmentsOutside = [];\n        circleObj.segmentsInside = [];\n        circleObj.segmentsInside2 = [];\n        circleObj.segmentsCount = 0;\n        circleObj.index = index;\n        //circleObj.audioIndex = audioIndex;\n        circleObj.z = z;\n        circleObj.center = center;\n        circleObj.circleCenter = {x: 0, y: 0};\n        circleObj.mp = {x: mp.x, y: mp.y};\n        circleObj.radius = coordinates[0].radius;\n        //circleObj.radiusAudio = circleObj.radius;\n        circleObj.color = {r: 0, g: 0, b: 0};\n\n        //toggle = index % 4;\n        toggle = index % 2;\n        index++;\n\n        if (z < 0) {\n\n            audioIndex++;\n\n        } else {\n\n            audioIndex--;\n\n        }\n\n        audioBufferIndex = Math.floor(Math.random() * audioBufferIndexMax) + audioBufferIndexMin;\n        //audioBufferIndex = audioBufferIndexMin;\n\n        var circleSegmentOutside;\n\n        for (var i = 0, l = coordinates.length; i < l; i++) {\n\n            var coordinate = coordinates[i];\n\n            //if ( i % 4 === toggle && i % 2 === 1 ) {\n            if (i % 2 === toggle) {\n\n                circleSegmentOutside = addCircleSegment(coordinate.x, coordinate.y, z, audioBufferIndex);\n                circleSegmentOutside.active = true;\n                circleSegmentOutside.index = coordinate.index;\n                circleSegmentOutside.radius = coordinate.radius;\n                circleSegmentOutside.radiusAudio = circleSegmentOutside.radius;// + Math.random() * 15;\n                circleSegmentOutside.segments = coordinate.segments;\n                circleSegmentOutside.coordinates = [];\n\n                var co;\n\n                if (i > 0) {\n\n                    co = coordinates[i - 1];\n\n                } else {\n\n                    co = coordinates[l - 1];\n\n                }\n\n                var sub1 = addCircleSegment(co.x, co.y, z, audioBufferIndex);\n                var sub2 = addCircleSegment(coordinate.x, coordinate.y, z - 5, audioBufferIndex);\n                var sub3 = addCircleSegment(co.x, co.y, z - 5, audioBufferIndex);\n\n                var sub4 = addCircleSegment(coordinate.x, coordinate.y, z, audioBufferIndex);\n                var sub5 = addCircleSegment(co.x, co.y, z, audioBufferIndex);\n                var sub6 = addCircleSegment(coordinate.x, coordinate.y, z - 5, audioBufferIndex);\n                var sub7 = addCircleSegment(co.x, co.y, z - 5, audioBufferIndex);\n\n                sub1.index = co.index;\n                sub2.index = coordinate.index;\n                sub3.index = co.index;\n\n                sub4.index = coordinate.index;\n                sub5.index = co.index;\n                sub6.index = coordinate.index;\n                sub7.index = co.index;\n\n                circleSegmentOutside.subs = [];\n                circleSegmentOutside.subs.push(sub1, sub2, sub3, sub4, sub5, sub6, sub7);\n\n                //audioBufferIndex = Math.floor( Math.random() * audioBufferIndexMax ) + audioBufferIndexMin;\n\n                if (i < l - 1) {\n\n                    audioBufferIndex = Math.floor(Math.random() * audioBufferIndexMax) + audioBufferIndexMin;\n\n                } else {\n\n                    audioBufferIndex = circleObj.segmentsOutside[0].audioBufferIndex;\n\n                }\n\n                circleObj.segmentsOutside.push(circleSegmentOutside);\n\n            } else {\n\n                circleObj.segmentsOutside.push({active: false});\n\n            }\n\n        }\n\n        circleHolder.push(circleObj);\n\n    }\n\n};\n\n\n\n\nfunction onResize() {\n\n    w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    context.fillStyle = '#000000';\n    context.fillRect(0, 0, w, h);\n\n    imageData = context.getImageData(0, 0, w, h);\n    data = imageData.data;\n\n};\n\n\nfunction mouseDownHandler(event) {\n\n    mouseDown = true;\n\n};\n\nfunction mouseUpHandler(event) {\n\n    mouseDown = false;\n\n};\n\nfunction mouseEnterHandler(event) {\n\n    mouseActive = true;\n\n};\n\nfunction mouseLeaveHandler(event) {\n\n    mouseActive = false;\n\n    //mousePos.x = w / 2;\n    //mousePos.y = h / 2;\n\n    mouseDown = false;\n\n};\n\nfunction mouseMoveHandler(event) {\n\n    mousePos = getMousePos(canvas, event);\n\n};\n\nfunction getMousePos(canvas, event) {\n\n    var rect = canvas.getBoundingClientRect();\n\n    return {x: event.clientX - rect.left, y: event.clientY - rect.top};\n\n};\n\n//---\n\nfunction render() {\n\n    var aa = false;\n\n    if (analyser) {\n\n        aa = true;\n\n    }\n\n    var frequencySource;\n\n    if (aa === true) {\n\n        frequencySource = new Uint8Array(analyser.frequencyBinCount);\n\n        analyser.getByteFrequencyData(frequencySource);\n\n    }\n\n    //---\n\n    var sortArray = false;\n\n    //---\n\n    var col = getRGBColor2(rgb);\n    var col2 = getRGBColor(rgb2);\n\n    limitRGBColor(col, 0.45);\n    limitRGBColor(col2, 0.25);\n\n    //---\n\n    for (var i = 0, l = circleHolder.length; i < l; i++) {\n\n        var circleObj = circleHolder[i];\n\n        circleObj.color.r = col.r - (circleObj.z + fov) / fov;\n        circleObj.color.g = col.g - (circleObj.z + fov) / fov;\n        circleObj.color.b = col.b - (circleObj.z + fov) / fov;\n\n        //circleObj.color.r = Math.floor( ( ( ( col.r - circleObj.z + fov ) ) + ( col2.r - circleObj.z + fov ) ) / 2 );\n        //circleObj.color.g = Math.floor( ( ( ( col.g - circleObj.z + fov ) ) + ( col2.g - circleObj.z + fov ) ) / 2 );\n        //circleObj.color.b = Math.floor( ( ( ( col.b - circleObj.z + fov ) ) + ( col2.b - circleObj.z + fov ) ) / 2 );\n\n\n        if (circleObj.color.r < col2.r) {\n\n            circleObj.color.r = col2.r;\n\n        }\n\n        if (circleObj.color.g < col2.g) {\n\n            circleObj.color.g = col2.g;\n\n        }\n\n        if (circleObj.color.b < col2.b) {\n\n            circleObj.color.b = col2.b;\n\n        }\n\n\n        var circleObjBack;\n\n        if (i > 0) {\n\n            circleObjBack = circleHolder[i - 1];\n\n        }\n\n        //---\n\n        if (mouseActive) {\n\n            circleObj.mp = mousePos;\n\n        } else {\n\n            circleObj.mp.x += ((w / 2) - circleObj.mp.x) * 0.00025;\n            circleObj.mp.y += ((h / 2) - circleObj.mp.y) * 0.00025;\n\n        }\n\n        //circleObj.center.x = ( ( w / 2 ) - circleObj.mp.x ) * ( -i / 150 ) + w / 2;\n        //circleObj.center.y = ( ( h / 2 ) - circleObj.mp.y ) * ( -i / 150 ) + h / 2;\n\n        circleObj.center.x = ((w / 2) - circleObj.mp.x) * ((circleObj.z - fov) / 500) + w / 2;\n        circleObj.center.y = ((h / 2) - circleObj.mp.y) * ((circleObj.z - fov) / 500) + h / 2;\n\n        //---\n\n        if (aa === true) {\n\n            //var f = frequencySource[ Math.floor(circleObj.z + fov) ];\n            //var f = frequencySource[ i ];\n            //var f = frequencySource[ circleObj.audioIndex ];\n            //var fAdd = (f / 25);// * ( (circleObj.z - fov) / 200 );\n\n            //circleObj.radiusAudio = fAdd;\n\n        }\n\n        //---\n\n        for (var j = 0, k = circleObj.segmentsOutside.length; j < k; j++) {\n\n            var circleSegmentOutside = circleObj.segmentsOutside[j];\n\n            if (circleSegmentOutside.active === true) {\n\n                //---\n\n                var scale = fov / (fov + circleObj.z);\n                var scaleBack;\n\n                if (i > 0) {\n\n                    scaleBack = fov / (fov + circleObjBack.z);\n\n                }\n\n                var frequency, frequencyAdd;\n\n                circleSegmentOutside.x2d = (circleSegmentOutside.x * scale) + circleObj.center.x;\n                circleSegmentOutside.y2d = (circleSegmentOutside.y * scale) + circleObj.center.y;\n\n                //---\n\n                if (aa === true) {\n\n                    frequency = frequencySource[circleSegmentOutside.audioBufferIndex];\n                    frequencyAdd = frequency / 20;\n\n                    //---\n\n                    circleSegmentOutside.radiusAudio = circleSegmentOutside.radius - frequencyAdd;\n\n                }\n\n                //---\n\n                var lineColorValue = 0;\n\n                if (j > 0) {\n\n                    if (aa === true && audio.paused === false) {\n\n                        lineColorValue = Math.round(i / l * (55 + frequency));//255\n\n                        if (lineColorValue > 255) {\n\n                            lineColorValue = 255;\n\n                        }\n\n                    } else {\n\n                        lineColorValue = Math.round(i / l * 200);//255\n\n                    }\n\n                }\n\n                //---\n\n                if (i > 0 && i < l - 1) {\n\n                    var sub1 = circleSegmentOutside.subs[0];\n                    var sub1angle = sub1.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n                    sub1.x2d = (sub1.x * scale) + circleObj.center.x;\n                    sub1.y2d = (sub1.y * scale) + circleObj.center.y;\n                    sub1.x = circleObj.circleCenter.x + Math.cos(sub1angle) * circleSegmentOutside.radiusAudio;\n                    sub1.y = circleObj.circleCenter.y + Math.sin(sub1angle) * circleSegmentOutside.radiusAudio;\n\n                    var sub2 = circleSegmentOutside.subs[1];\n                    var sub2angle = sub2.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n                    sub2.x2d = (sub2.x * scaleBack) + circleObjBack.center.x;\n                    sub2.y2d = (sub2.y * scaleBack) + circleObjBack.center.y;\n                    sub2.x = circleObj.circleCenter.x + Math.cos(sub2angle) * circleSegmentOutside.radiusAudio;\n                    sub2.y = circleObj.circleCenter.y + Math.sin(sub2angle) * circleSegmentOutside.radiusAudio;\n\n                    var sub3 = circleSegmentOutside.subs[2];\n                    var sub3angle = sub3.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n                    sub3.x2d = (sub3.x * scaleBack) + circleObjBack.center.x;\n                    sub3.y2d = (sub3.y * scaleBack) + circleObjBack.center.y;\n                    sub3.x = circleObj.circleCenter.x + Math.cos(sub3angle) * circleSegmentOutside.radiusAudio;\n                    sub3.y = circleObj.circleCenter.y + Math.sin(sub3angle) * circleSegmentOutside.radiusAudio;\n\n                    var sub4 = circleSegmentOutside.subs[3];\n                    var sub4angle = sub4.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n                    sub4.x2d = (sub4.x * scale) + circleObj.center.x;\n                    sub4.y2d = (sub4.y * scale) + circleObj.center.y;\n                    sub4.x = circleObj.circleCenter.x + Math.cos(sub4angle) * circleSegmentOutside.radius;\n                    sub4.y = circleObj.circleCenter.y + Math.sin(sub4angle) * circleSegmentOutside.radius;\n\n                    var sub5 = circleSegmentOutside.subs[4];\n                    var sub5angle = sub5.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n                    sub5.x2d = (sub5.x * scale) + circleObj.center.x;\n                    sub5.y2d = (sub5.y * scale) + circleObj.center.y;\n                    sub5.x = circleObj.circleCenter.x + Math.cos(sub5angle) * circleSegmentOutside.radius;\n                    sub5.y = circleObj.circleCenter.y + Math.sin(sub5angle) * circleSegmentOutside.radius;\n\n                    var sub6 = circleSegmentOutside.subs[5];\n                    var sub6angle = sub6.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n                    sub6.x2d = (sub6.x * scaleBack) + circleObjBack.center.x;\n                    sub6.y2d = (sub6.y * scaleBack) + circleObjBack.center.y;\n                    sub6.x = circleObj.circleCenter.x + Math.cos(sub6angle) * circleSegmentOutside.radius;\n                    sub6.y = circleObj.circleCenter.y + Math.sin(sub6angle) * circleSegmentOutside.radius;\n\n                    var sub7 = circleSegmentOutside.subs[6];\n                    var sub7angle = sub7.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n                    sub7.x2d = (sub7.x * scaleBack) + circleObjBack.center.x;\n                    sub7.y2d = (sub7.y * scaleBack) + circleObjBack.center.y;\n                    sub7.x = circleObj.circleCenter.x + Math.cos(sub7angle) * circleSegmentOutside.radius;\n                    sub7.y = circleObj.circleCenter.y + Math.sin(sub7angle) * circleSegmentOutside.radius;\n\n                    var p1;\n                    var p2;\n                    var p3;\n                    var p4;\n\n                    var p5 = circleSegmentOutside.subs[3];\n                    var p6 = circleSegmentOutside.subs[4];\n                    var p7 = circleSegmentOutside.subs[6];\n                    var p8 = circleSegmentOutside.subs[5];\n\n                    if (frequencyAdd > 0) {\n\n                        p1 = circleSegmentOutside;\n                        p2 = circleSegmentOutside.subs[1];\n                        p3 = circleSegmentOutside.subs[2];\n                        p4 = circleSegmentOutside.subs[0];\n\n                    }\n\n                    var cr = Math.round(circleObj.color.r * lineColorValue);\n                    var cg = Math.round(circleObj.color.g * lineColorValue);\n                    var cb = Math.round(circleObj.color.b * lineColorValue);\n\n                    if (frequencyAdd > 0) {\n\n                        drawLine(p1.x2d | 0, p1.y2d | 0, p2.x2d | 0, p2.y2d | 0, cr, cg, cb, 255);\n                        drawLine(p2.x2d | 0, p2.y2d | 0, p3.x2d | 0, p3.y2d | 0, cr, cg, cb, 255);\n                        drawLine(p3.x2d | 0, p3.y2d | 0, p4.x2d | 0, p4.y2d | 0, cr, cg, cb, 255);\n                        drawLine(p4.x2d | 0, p4.y2d | 0, p1.x2d | 0, p1.y2d | 0, cr, cg, cb, 255);\n\n                        drawLine(p5.x2d | 0, p5.y2d | 0, p1.x2d | 0, p1.y2d | 0, cr, cg, cb, 255);\n                        drawLine(p6.x2d | 0, p6.y2d | 0, p4.x2d | 0, p4.y2d | 0, cr, cg, cb, 255);\n                        drawLine(p7.x2d | 0, p7.y2d | 0, p3.x2d | 0, p3.y2d | 0, cr, cg, cb, 255);\n                        drawLine(p8.x2d | 0, p8.y2d | 0, p2.x2d | 0, p2.y2d | 0, cr, cg, cb, 255);\n\n                    }\n\n                    if (circleObj.z < fov / 2) {\n\n                        drawLine(p5.x2d | 0, p5.y2d | 0, p6.x2d | 0, p6.y2d | 0, cr, cg, cb, 255);\n                        drawLine(p6.x2d | 0, p6.y2d | 0, p7.x2d | 0, p7.y2d | 0, cr, cg, cb, 255);\n                        drawLine(p7.x2d | 0, p7.y2d | 0, p8.x2d | 0, p8.y2d | 0, cr, cg, cb, 255);\n                        drawLine(p8.x2d | 0, p8.y2d | 0, p5.x2d | 0, p5.y2d | 0, cr, cg, cb, 255);\n\n                    }\n\n                }\n\n                //---\n\n                var circleSegmentOutsideangle;\n\n                //if ( j < k - 1 ) {\n\n                circleSegmentOutsideangle = circleSegmentOutside.index * (MATHPI2 / circleSegmentOutside.segments) + time;\n\n                circleSegmentOutside.x = circleObj.circleCenter.x + Math.cos(circleSegmentOutsideangle) * circleSegmentOutside.radiusAudio;\n                circleSegmentOutside.y = circleObj.circleCenter.y + Math.sin(circleSegmentOutsideangle) * circleSegmentOutside.radiusAudio;\n\n                /*} else {\n\n                  var circleSegmentOutside1 = circleObj.segmentsOutside[ 0 ];\n\n                  circleSegmentOutsideangle = circleSegmentOutside1.index * ( MATHPI2 / circleSegmentOutside1.segments ) + time;\n\n                  circleSegmentOutside.x = circleObj.circleCenter.x + Math.cos( circleSegmentOutsideangle ) * circleSegmentOutside1.radiusAudio;\n                  circleSegmentOutside.y = circleObj.circleCenter.y + Math.sin( circleSegmentOutsideangle ) * circleSegmentOutside1.radiusAudio;\n\n                   }\n                */\n\n\n                //---\n                /*\n              if ( i > 0 && i < l - 1 ) {\n              //if ( i > 0 && i < l - 1 && j < k - 1 ) {\n\n                var circleSegmentOutsideLineBack;// = circleObjBack[ j ];\n                var circleSegmentInsideLineBack;\n\n                //if ( j === 0 ) {\n\n                  //pB = circleObjBack.segments[ circleObjBack.segments.length - 1 ];\n\n                //} else {\n\n                  //pB = circleObjBack.segments[ j - 1 ];\n\n                //}\n\n                circleSegmentOutsideLineBack = circleObjBack.segmentsOutside[ j ];\n                circleSegmentInsideLineBack = circleObjBack.segmentsInside[ j ];\n\n                //drawLine( circleSegmentOutside.x2d | 0, circleSegmentOutside.y2d | 0, circleSegmentOutsideLineBack.x2d | 0, circleSegmentOutsideLineBack.y2d | 0, 0, Math.round( lineColorValue / 2 ), lineColorValue, 255 );\n                //drawLine( circleSegmentInside.x2d | 0, circleSegmentInside.y2d | 0, circleSegmentInsideLineBack.x2d | 0, circleSegmentInsideLineBack.y2d | 0, 0, Math.round( lineColorValue / 2 ), lineColorValue, 255 );\n\n              }\n              */\n\n\n            }\n\n        }\n\n        if (mouseDown) {\n\n            circleObj.z += speed;\n\n            if (circleObj.z > fov) {\n\n                circleObj.z -= (fov * 2);\n\n                sortArray = true;\n\n            }\n\n        } else {\n\n            circleObj.z -= speed;\n\n            if (circleObj.z < -fov) {\n\n                circleObj.z += (fov * 2);\n\n                sortArray = true;\n\n            }\n\n        }\n\n    }\n\n    //---\n\n    if (sortArray) {\n\n        circleHolder = circleHolder.sort(function (a, b) {\n\n            return (b.z - a.z);\n\n        });\n\n    }\n\n    //---\n\n    if (mouseDown) {\n\n        time -= 0.005;\n\n    } else {\n\n        time += 0.005;\n\n    }\n\n    //---\n\n    //soft invert colors\n    if (mouseDown) {\n\n        if (colorInvertValue < 255)\n            colorInvertValue += 5;\n        else\n            colorInvertValue = 255;\n\n        softInvert(colorInvertValue);\n\n    } else {\n\n        if (colorInvertValue > 0)\n            colorInvertValue -= 5;\n        else\n            colorInvertValue = 0;\n\n        if (colorInvertValue > 0)\n            softInvert(colorInvertValue);\n\n    }\n\n};\n\n//---\n\nfunction softInvert(value) {\n\n    for (var j = 0, n = data.length; j < n; j += 4) {\n\n        data[j] = Math.abs(value - data[j]);     // red\n        data[j + 1] = Math.abs(value - data[j + 1]); // green\n        data[j + 2] = Math.abs(value - data[j + 2]); // blue\n        data[j + 3] = 255;// - data[ j + 3 ]; // alpha\n\n    }\n\n};\n\n//---\n\nfunction animate() {\n\n    clearImageData();\n\n    render();\n\n    context.putImageData(imageData, 0, 0);\n\n    requestAnimationFrame(animate);\n\n};\n\nwindow.requestAnimFrame = (function () {\n\n    return window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        function (callback) {\n            window.setTimeout(callback, 1000 / 60);\n        };\n\n})();"]},"metadata":{},"sourceType":"module"}