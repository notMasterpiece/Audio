{"ast":null,"code":"import createAction from './createAction';\nimport isUndefined from './utils/isUndefined';\nimport isPlainObject from './utils/isPlainObject';\nvar asyncActionTypes = ['start', 'success', 'error'];\nexport default function createAsyncActions(actionType, actionOptions) {\n  if (actionType.includes('/')) {\n    var actionIndex = actionType.lastIndexOf('/') + 1;\n    var moduleName = actionType.substring(0, actionIndex);\n    var actionName = actionType.substring(actionIndex, actionType.length);\n    actionType = [moduleName, actionName.toUpperCase()].join('');\n  }\n\n  var action = createAction(actionType);\n  asyncActionTypes.forEach(function (type) {\n    var asyncType = [actionType, type.toUpperCase()].join('_');\n    var actionTypeLower = type.toLowerCase();\n    var payloadCreator;\n    var metaCreator;\n\n    if (!isUndefined(actionOptions) && isPlainObject(actionOptions) && isPlainObject(actionOptions[type])) {\n      var options = actionOptions[type];\n      payloadCreator = options.payloadCreator;\n      metaCreator = options.metaCreator;\n    }\n\n    action[actionTypeLower] = createAction(asyncType, payloadCreator, metaCreator);\n  });\n  return action;\n}\ncreateAsyncActions.asyncActionTypes = asyncActionTypes;\n\ncreateAsyncActions.setTypes = function (_ref) {\n  var start = _ref.start,\n      success = _ref.success,\n      error = _ref.error;\n  asyncActionTypes = [start, success, error];\n  createAsyncActions.asyncActionTypes = asyncActionTypes;\n};","map":null,"metadata":{},"sourceType":"module"}