{"ast":null,"code":"var _jsxFileName = \"/Grawdanin/MERN/audio/client/src/components/PlayPanel/PlayPanelVolume.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { IoIosVolumeHigh, IoIosVolumeOff } from \"react-icons/io\";\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nconst PlayPanelVolume = ({\n  volume,\n  changeVolume,\n  defaultValue\n}) => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(SliderWithTooltip, {\n    value: volume,\n    onChange: value => changeVolume(value),\n    tipFormatter: value => \"\".concat(value, \"%\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"jp-volume-image\",\n    onClick: volume > 0 ? () => changeVolume(0) : () => changeVolume(defaultValue),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, volume > 0 ? React.createElement(IoIosVolumeHigh, {\n    size: 30,\n    color: '#909090',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }) : React.createElement(IoIosVolumeOff, {\n    size: 30,\n    color: '#909090',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n};\n\nPlayPanelVolume.propTypes = {\n  volume: PropTypes.number.isRequired,\n  changeVolume: PropTypes.func.isRequired,\n  defaultValue: PropTypes.number.isRequired\n};\nexport default PlayPanelVolume;","map":{"version":3,"sources":["/Grawdanin/MERN/audio/client/src/components/PlayPanel/PlayPanelVolume.js"],"names":["React","Fragment","PropTypes","Slider","IoIosVolumeHigh","IoIosVolumeOff","createSliderWithTooltip","SliderWithTooltip","PlayPanelVolume","volume","changeVolume","defaultValue","value","propTypes","number","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,4BAAP;AAEA,SAAQC,eAAR,EAAyBC,cAAzB,QAA8C,gBAA9C;AAEA,MAAMC,uBAAuB,GAAGH,MAAM,CAACG,uBAAvC;AACA,MAAMC,iBAAiB,GAAGD,uBAAuB,CAACH,MAAD,CAAjD;;AAGA,MAAMK,eAAe,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAAD,KAA0C;AAC9D,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AACI,IAAA,KAAK,EAAEF,MADX;AAEI,IAAA,QAAQ,EAAEG,KAAK,IAAIF,YAAY,CAACE,KAAD,CAFnC;AAGI,IAAA,YAAY,EAAEA,KAAK,cAAOA,KAAP,MAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AACI,IAAA,SAAS,EAAC,iBADd;AAEI,IAAA,OAAO,EAAGH,MAAM,GAAG,CAAV,GAAe,MAAMC,YAAY,CAAC,CAAD,CAAjC,GAAuC,MAAMA,YAAY,CAACC,YAAD,CAFtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKF,MAAM,GAAG,CAAT,GACK,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE,EAAvB;AAA2B,IAAA,KAAK,EAAE,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,GAEK,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,EAAtB;AAA0B,IAAA,KAAK,EAAE,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANV,CAPJ,CADJ;AAoBH,CArBD;;AAuBAD,eAAe,CAACK,SAAhB,GAA4B;AACxBJ,EAAAA,MAAM,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UADD;AAExBL,EAAAA,YAAY,EAAER,SAAS,CAACc,IAAV,CAAeD,UAFL;AAGxBJ,EAAAA,YAAY,EAAET,SAAS,CAACY,MAAV,CAAiBC;AAHP,CAA5B;AAMA,eAAeP,eAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport {IoIosVolumeHigh, IoIosVolumeOff} from \"react-icons/io\";\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\n\nconst PlayPanelVolume = ({volume, changeVolume, defaultValue}) => {\n    return (\n        <Fragment>\n            <SliderWithTooltip\n                value={volume}\n                onChange={value => changeVolume(value)}\n                tipFormatter={value => `${value}%`}\n            />\n\n            <div\n                className=\"jp-volume-image\"\n                onClick={(volume > 0) ? () => changeVolume(0) : () => changeVolume(defaultValue)}\n            >\n                {volume > 0\n                    ? <IoIosVolumeHigh size={30} color={'#909090'}/>\n                    : <IoIosVolumeOff size={30} color={'#909090'}/>\n                }\n\n            </div>\n        </Fragment>\n    );\n};\n\nPlayPanelVolume.propTypes = {\n    volume: PropTypes.number.isRequired,\n    changeVolume: PropTypes.func.isRequired,\n    defaultValue: PropTypes.number.isRequired,\n};\n\nexport default PlayPanelVolume;"]},"metadata":{},"sourceType":"module"}