{"ast":null,"code":"import _taggedTemplateLiteral from \"/Grawdanin/MERN/audio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanelProgressBar.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  .rc-slider {\\n    padding: 0;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'rc-slider';\nimport styled from 'styled-components';\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nconst PlayPanelProgressBar = ({\n  currentTrackDuration,\n  currentTrackMoment,\n  setCurrentTrackMomentm,\n  setProgressValue\n}) => {\n  const currentTrackDurationNumber = currentTrackDuration.replace(' : ', '.');\n  const currentTrackMomentNumber = currentTrackMoment.toString().includes(':') ? currentTrackMoment.replace(' : ', '.') : currentTrackMoment;\n  console.log(currentTrackMoment);\n  console.log(currentTrackMomentNumber);\n  if (!currentTrackDuration) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"loading\");\n  return React.createElement(ProgresWrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(SliderWithTooltip, {\n    value: +currentTrackMomentNumber,\n    min: 0,\n    max: +currentTrackDurationNumber,\n    step: 0.01,\n    onChange: value => setProgressValue(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nPlayPanelProgressBar.propTypes = {};\nconst ProgresWrap = styled.div(_templateObject());\nexport default PlayPanelProgressBar;","map":{"version":3,"sources":["/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanelProgressBar.js"],"names":["React","PropTypes","Slider","styled","createSliderWithTooltip","SliderWithTooltip","PlayPanelProgressBar","currentTrackDuration","currentTrackMoment","setCurrentTrackMomentm","setProgressValue","currentTrackDurationNumber","replace","currentTrackMomentNumber","toString","includes","console","log","value","propTypes","ProgresWrap","div"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,uBAAuB,GAAGF,MAAM,CAACE,uBAAvC;AACA,MAAMC,iBAAiB,GAAGD,uBAAuB,CAACF,MAAD,CAAjD;;AAEA,MAAMI,oBAAoB,GAAG,CAAC;AAACC,EAAAA,oBAAD;AAAuBC,EAAAA,kBAAvB;AAA2CC,EAAAA,sBAA3C;AAAmEC,EAAAA;AAAnE,CAAD,KAA0F;AAEnH,QAAMC,0BAA0B,GAAGJ,oBAAoB,CAACK,OAArB,CAA6B,KAA7B,EAAmC,GAAnC,CAAnC;AACA,QAAMC,wBAAwB,GAAGL,kBAAkB,CAACM,QAAnB,GAA8BC,QAA9B,CAAuC,GAAvC,IAA+CP,kBAAkB,CAACI,OAAnB,CAA2B,KAA3B,EAAiC,GAAjC,CAA/C,GAAuFJ,kBAAxH;AAIAQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,kBAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,wBAAZ;AAGA,MAAI,CAACN,oBAAL,EAA2B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAE3B,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AACI,IAAA,KAAK,EAAE,CAACM,wBADZ;AAEI,IAAA,GAAG,EAAE,CAFT;AAGI,IAAA,GAAG,EAAG,CAACF,0BAHX;AAII,IAAA,IAAI,EAAE,IAJV;AAKI,IAAA,QAAQ,EAAGO,KAAK,IAAIR,gBAAgB,CAACQ,KAAD,CALxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAWH,CAxBD;;AA0BAZ,oBAAoB,CAACa,SAArB,GAAiC,EAAjC;AAKA,MAAMC,WAAW,GAAGjB,MAAM,CAACkB,GAAV,mBAAjB;AAUA,eAAef,oBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider  from 'rc-slider';\nimport styled from 'styled-components';\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nconst PlayPanelProgressBar = ({currentTrackDuration, currentTrackMoment, setCurrentTrackMomentm, setProgressValue}) => {\n\n    const currentTrackDurationNumber = currentTrackDuration.replace(' : ','.');\n    const currentTrackMomentNumber = currentTrackMoment.toString().includes(':') ?  currentTrackMoment.replace(' : ','.') : currentTrackMoment;\n\n\n\n    console.log(currentTrackMoment);\n    console.log(currentTrackMomentNumber);\n\n\n    if (!currentTrackDuration) return <p>loading</p>\n\n    return (\n        <ProgresWrap>\n            <SliderWithTooltip\n                value={+currentTrackMomentNumber}\n                min={0}\n                max={ +currentTrackDurationNumber }\n                step={0.01}\n                onChange={ value => setProgressValue(value) }\n            />\n        </ProgresWrap>\n    );\n};\n\nPlayPanelProgressBar.propTypes = {\n\n};\n\n\nconst ProgresWrap = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  .rc-slider {\n    padding: 0;\n  }\n`;\n\nexport default PlayPanelProgressBar;"]},"metadata":{},"sourceType":"module"}