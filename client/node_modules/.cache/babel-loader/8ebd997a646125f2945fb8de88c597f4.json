{"ast":null,"code":"var _jsxFileName = \"/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanelVolume.js\";\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport volume from \"../../assets/images/svg/volume.svg\";\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider);\n\nconst PlayPanelVolume = ({\n  changeVolume,\n  defaulfVolume\n}) => {\n  return React.createElement(\"div\", {\n    className: \"jp-volume-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-volume-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: volume,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(Range, {\n    onChange: value => changeVolume(value),\n    tipFormatter: value => \"\".concat(value, \"%\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nPlayPanelVolume.propTypes = {};\nexport default PlayPanelVolume;","map":{"version":3,"sources":["/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanelVolume.js"],"names":["React","useRef","PropTypes","Slider","createSliderWithTooltip","Range","PlayPanelVolume","changeVolume","defaulfVolume","volume","value","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAoB,WAApB;AACA,OAAO,4BAAP;;AAGA,MAAMC,uBAAuB,GAAGD,MAAM,CAACC,uBAAvC;AACA,MAAMC,KAAK,GAAGD,uBAAuB,CAACD,MAAD,CAArC;;AAMA,MAAMG,eAAe,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAAmC;AAEvD,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEC,MAAV;AAAkB,IAAA,GAAG,EAAC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAMK,oBAAC,KAAD;AAEI,IAAA,QAAQ,EAAEC,KAAK,IAAIH,YAAY,CAACG,KAAD,CAFnC;AAGI,IAAA,YAAY,EAAEA,KAAK,cAAOA,KAAP,MAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANL,CADJ;AAeH,CAjBD;;AAmBAJ,eAAe,CAACK,SAAhB,GAA4B,EAA5B;AAIA,eAAeL,eAAf","sourcesContent":["import React, {useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Slider  from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport volume from '../../assets/images/svg/volume.svg';\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider);\n\n\n\n\n\nconst PlayPanelVolume = ({changeVolume, defaulfVolume}) => {\n\n    return (\n        <div className=\"jp-volume-wrap\">\n\n            <div className=\"jp-volume-image\">\n                <img src={volume} alt=\"\" />\n            </div>\n\n             <Range\n                 \n                 onChange={value => changeVolume(value)}\n                 tipFormatter={value => `${value}%`}\n             />\n\n        </div>\n    );\n};\n\nPlayPanelVolume.propTypes = {\n\n};\n\nexport default PlayPanelVolume;"]},"metadata":{},"sourceType":"module"}