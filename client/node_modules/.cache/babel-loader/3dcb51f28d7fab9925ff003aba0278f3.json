{"ast":null,"code":"import _slicedToArray from \"/Grawdanin/MERN/audio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanel.js\";\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlayPanelVolume from './PlayPanelVolume';\nimport PlayPanelProgressBar from './PlayPanelProgressBar';\nimport './playerPanel.scss'; // import m from '../../assets/audio/_Лучшая Музыка 2019 🌴 Зарубежные песни Хиты 🌴 Популярные Песни Слушать Бесплатно 2019_.mp3';\n\nconst getSecondsToMinutesAndSeconds = time => {\n  if (time === 0) {\n    return '0 : 00';\n  }\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time - minutes * 60;\n  return \"\".concat(minutes, \" : \").concat(seconds >= 10 ? seconds : '0' + seconds);\n};\n\nconst PlayPanel = () => {\n  let audioPlayer = useRef();\n  const defaultValue = 60;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isPlaying = _useState2[0],\n        setIsPlaying = _useState2[1];\n\n  const _useState3 = useState(defaultValue),\n        _useState4 = _slicedToArray(_useState3, 2),\n        volume = _useState4[0],\n        setVolume = _useState4[1];\n\n  const _useState5 = useState('0'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        progressBarWidth = _useState6[0],\n        setProgressBarWidth = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentTrackDuration = _useState8[0],\n        setCurrentTrackDuration = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        currentTrackMoment = _useState10[0],\n        setCurrentTrackMoment = _useState10[1];\n\n  const handlePlay = () => {\n    const audio = audioPlayer.current;\n\n    if (audio.paused || audio.ended) {\n      audio.play();\n      setIsPlaying(true);\n    } else {\n      audio.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  const changeVolume = value => {\n    setVolume(value);\n    audioPlayer.current.volume = value / 100;\n  };\n\n  const handleMetadata = () => {\n    const audio = audioPlayer.current;\n    const duration = Math.floor(audio.duration);\n    setCurrentTrackDuration(getSecondsToMinutesAndSeconds(duration));\n  };\n\n  const setProgressValue = value => {\n    console.log(value);\n    audioPlayer.current.currentTime = 100; // setCurrentTrackDuration(value.toString().replace('.', ' : '));\n  };\n\n  const handleTimeupdate = () => {\n    setCurrentTrackMoment(Math.floor(audioPlayer.current.currentTime));\n    setProgressBarWidth(audioPlayer.current.currentTime / audioPlayer.current.duration * 100 + '%');\n\n    if (audioPlayer.current.currentTime === audioPlayer.current.duration) {\n      alert('end');\n    }\n  };\n\n  console.log({\n    currentTrackMoment\n  });\n  console.log({\n    currentTrackDuration\n  });\n  return React.createElement(\"div\", {\n    className: \"ms_player_wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ms_player_close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-angle-up\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"player_mid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"audio-player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-jplayer\",\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"audio\", {\n    ref: audioPlayer,\n    preload: \"metadata\",\n    onLoadedMetadata: handleMetadata,\n    onTimeUpdate: () => handleTimeupdate(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: \"https://res.cloudinary.com/g-r-a-w-d-a-n-i-n/video/upload/v1561499590/artur_pirozhkov_-_zacepila__zf.fm.mp3\",\n    type: \"audio/ogg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), \"Ooops, your browser is sooo old.\")), audioPlayer.current && React.createElement(\"div\", {\n    className: \"\".concat(isPlaying ? 'jp-state-playing' : '', \" jp-audio\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(PlayPanelProgressBar, {\n    setProgressValue: setProgressValue,\n    currentTrackMoment: getSecondsToMinutesAndSeconds(currentTrackMoment),\n    currentTrackDuration: currentTrackDuration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"jp-type-playlist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-gui jp-interface flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-controls flex-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"jp-previous\",\n    tabIndex: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ms_play_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"jp-play\",\n    onClick: handlePlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ms_play_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"jp-next\",\n    tabIndex: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ms_play_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"jp-progress-container flex-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-time-holder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"jp-current-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, getSecondsToMinutesAndSeconds(currentTrackMoment)), React.createElement(\"span\", {\n    className: \"jp-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, currentTrackDuration || '0 : 00')), React.createElement(\"div\", {\n    className: \"jp-progress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-seek-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-play-bar\",\n    style: {\n      width: progressBarWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bullet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"jp-toggles flex-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"jp-shuffle\",\n    tabIndex: \"0\",\n    title: \"Shuffle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ms_play_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"jp-repeat\",\n    tabIndex: \"0\",\n    title: \"Repeat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ms_play_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }))), React.createElement(PlayPanelVolume, {\n    volume: volume,\n    defaultValue: defaultValue,\n    changeVolume: changeVolume,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })))))));\n};\n\nPlayPanel.propTypes = {};\nexport default PlayPanel;","map":{"version":3,"sources":["/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanel.js"],"names":["React","useRef","useState","PropTypes","PlayPanelVolume","PlayPanelProgressBar","getSecondsToMinutesAndSeconds","time","minutes","Math","floor","seconds","PlayPanel","audioPlayer","defaultValue","isPlaying","setIsPlaying","volume","setVolume","progressBarWidth","setProgressBarWidth","currentTrackDuration","setCurrentTrackDuration","currentTrackMoment","setCurrentTrackMoment","handlePlay","audio","current","paused","ended","play","pause","changeVolume","value","handleMetadata","duration","setProgressValue","console","log","currentTime","handleTimeupdate","alert","display","width","propTypes"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport PlayPanelVolume from './PlayPanelVolume'\nimport PlayPanelProgressBar from './PlayPanelProgressBar'\n\nimport './playerPanel.scss';\n// import m from '../../assets/audio/_Лучшая Музыка 2019 🌴 Зарубежные песни Хиты 🌴 Популярные Песни Слушать Бесплатно 2019_.mp3';\n\n\n\nconst getSecondsToMinutesAndSeconds = time => {\n    if (time === 0) {\n        return '0 : 00';\n    }\n    const minutes = Math.floor(time / 60);\n    const seconds = time - minutes * 60;\n    return `${minutes} : ${(seconds >= 10) ? seconds : '0' + seconds}`;\n};\n\n\nconst PlayPanel = () => {\n\n    let audioPlayer = useRef();\n    const defaultValue = 60;\n\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [volume, setVolume] = useState(defaultValue);\n    const [progressBarWidth, setProgressBarWidth] = useState('0');\n    const [currentTrackDuration, setCurrentTrackDuration] = useState(0);\n    const [currentTrackMoment, setCurrentTrackMoment] = useState(0);\n\n\n\n    const handlePlay = () => {\n\n        const audio = audioPlayer.current;\n\n        if (audio.paused || audio.ended) {\n            audio.play();\n            setIsPlaying(true);\n        } else {\n            audio.pause();\n            setIsPlaying(false);\n        }\n    };\n\n\n    const changeVolume = value => {\n        setVolume(value);\n        audioPlayer.current.volume = value / 100\n    };\n\n    const handleMetadata = () => {\n        const audio = audioPlayer.current;\n        const duration = Math.floor(audio.duration);\n        setCurrentTrackDuration(getSecondsToMinutesAndSeconds(duration));\n    };\n\n\n    const setProgressValue = value => {\n        console.log(value);\n        audioPlayer.current.currentTime = 100; \n        // setCurrentTrackDuration(value.toString().replace('.', ' : '));\n    };\n\n\n    const handleTimeupdate = () => {\n        setCurrentTrackMoment(Math.floor(audioPlayer.current.currentTime));\n        setProgressBarWidth(\n            (audioPlayer.current.currentTime / audioPlayer.current.duration) * 100 + '%'\n        );\n        if (audioPlayer.current.currentTime === audioPlayer.current.duration) {\n            alert('end');\n        }\n    };\n\n\n    console.log({currentTrackMoment});\n    console.log({currentTrackDuration});\n\n    return (\n\n        <div className=\"ms_player_wrapper\">\n            <div className=\"ms_player_close\">\n                <i className=\"fa fa-angle-up\" aria-hidden=\"true\"/>\n            </div>\n            <div className=\"player_mid\">\n                <div className=\"audio-player\">\n\n                    <div className=\"jp-jplayer\" style={{display: 'none'}}>\n\n                        <audio\n                            ref={audioPlayer}\n                            preload=\"metadata\"\n                            onLoadedMetadata={handleMetadata}\n                            onTimeUpdate={() => handleTimeupdate()}\n                        >\n                            <source\n                                src='https://res.cloudinary.com/g-r-a-w-d-a-n-i-n/video/upload/v1561499590/artur_pirozhkov_-_zacepila__zf.fm.mp3'\n                                type=\"audio/ogg\"\n                            />\n                            Ooops, your browser is sooo old.\n                        </audio>\n                    </div>\n\n                    {audioPlayer.current && (\n                        <div className={`${isPlaying ? 'jp-state-playing' : ''} jp-audio`}>\n\n\n                            <PlayPanelProgressBar\n                                setProgressValue={setProgressValue}\n                                currentTrackMoment={getSecondsToMinutesAndSeconds(currentTrackMoment)}\n                                currentTrackDuration={currentTrackDuration}\n                            />\n\n                            <div className=\"jp-type-playlist\">\n                                <div className=\"jp-gui jp-interface flex-wrap\">\n                                    <div className=\"jp-controls flex-item\">\n                                        <button className=\"jp-previous\" tabIndex=\"0\">\n                                            <i className=\"ms_play_control\"/>\n                                        </button>\n\n                                        <button\n                                            className=\"jp-play\"\n                                            onClick={handlePlay}\n                                        >\n                                            <i className=\"ms_play_control\"/>\n                                        </button>\n\n                                        <button className=\"jp-next\" tabIndex=\"0\">\n                                            <i className=\"ms_play_control\"/>\n                                        </button>\n                                    </div>\n                                    <div className=\"jp-progress-container flex-item\">\n                                        <div className=\"jp-time-holder\">\n                                        <span className=\"jp-current-time\">\n                                            {getSecondsToMinutesAndSeconds(currentTrackMoment)}\n                                        </span>\n                                            <span className=\"jp-duration\">\n                                            {currentTrackDuration || '0 : 00'}\n                                        </span>\n                                        </div>\n\n\n                                        <div className=\"jp-progress\">\n                                            <div className=\"jp-seek-bar\">\n                                                <div className=\"jp-play-bar\" style={{width: progressBarWidth}}>\n                                                    <div className=\"bullet\">\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n\n                                    <div className=\"jp-toggles flex-item\">\n                                        <button className=\"jp-shuffle\" tabIndex=\"0\" title=\"Shuffle\">\n                                            <i className=\"ms_play_control\"/></button>\n                                        <button className=\"jp-repeat\" tabIndex=\"0\" title=\"Repeat\"><i\n                                            className=\"ms_play_control\"/></button>\n                                    </div>\n\n                                    <PlayPanelVolume\n                                        volume={volume}\n                                        defaultValue={defaultValue}\n                                        changeVolume={changeVolume}/>\n\n                                </div>\n                            </div>\n                        </div>\n                    )}\n\n                </div>\n            </div>\n\n        </div>\n);\n};\n\nPlayPanel.propTypes = {\n\n};\n\nexport default PlayPanel;\n\n\n    "]},"metadata":{},"sourceType":"module"}