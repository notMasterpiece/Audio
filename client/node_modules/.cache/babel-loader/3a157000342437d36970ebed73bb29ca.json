{"ast":null,"code":"var _jsxFileName = \"/Grawdanin/MERN/audio/client/src/components/PlayPanel/PlayPanel.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PlayPanelRight from './PlayPanelRight';\nimport PlayPanelProgressBar from './PlayPanelProgressBar';\nimport PlayPanelAudioInfo from './PlayPanelAudioInfo';\nimport './playerPanel.scss';\nimport { IoIosPlay, IoIosPause, IoMdSkipForward, IoMdSkipBackward } from \"react-icons/io\";\n\nconst PlayPanel = ({\n  isLoading,\n  loop,\n  audio,\n  currentAudioObj,\n  isPlaying,\n  handlePlay,\n  handlePlayNext,\n  handlePlayPrev,\n  volume,\n  defaultVolume,\n  duration,\n  changeVolume,\n  currentTime,\n  handleAudioLoop,\n  setAudioDuration,\n  togglePlayPanel,\n  showPlayPanel,\n  player\n}) => {\n  if (!audio) return null;\n  return React.createElement(\"div\", {\n    className: \"ms_player_wrapper \".concat(showPlayPanel ? '' : 'close_player'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ms_player_close\",\n    onClick: togglePlayPanel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-angle-up\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"player_mid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"audio-player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-audio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(PlayPanelProgressBar, {\n    audio: audio,\n    setAudioDuration: setAudioDuration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(PlayPanelAudioInfo, {\n    isLoading: isLoading,\n    isPlaying: isPlaying,\n    duration: duration,\n    currentTime: currentTime,\n    currentAudioObj: currentAudioObj,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"jp-controls flex-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"jp-previous\",\n    onClick: handlePlayPrev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(IoMdSkipBackward, {\n    size: 25,\n    color: 'white',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"jp-play\",\n    onClick: handlePlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, player.isPlaying ? React.createElement(IoIosPause, {\n    size: 50,\n    style: {\n      transform: 'translateX(2px)'\n    },\n    color: 'white',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }) : React.createElement(IoIosPlay, {\n    size: 50,\n    style: {\n      transform: 'translateX(5px)'\n    },\n    color: 'white',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"jp-next\",\n    onClick: handlePlayNext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(IoMdSkipForward, {\n    size: 25,\n    color: 'white',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(PlayPanelRight, {\n    volume: volume,\n    defaultVolume: defaultVolume,\n    changeVolume: changeVolume,\n    loop: loop,\n    handleAudioLoop: handleAudioLoop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })))));\n};\n\nPlayPanel.propTypes = {\n  audioList: PropTypes.array,\n  currentAudio: PropTypes.number\n};\nexport default PlayPanel;","map":{"version":3,"sources":["/Grawdanin/MERN/audio/client/src/components/PlayPanel/PlayPanel.js"],"names":["React","PropTypes","PlayPanelRight","PlayPanelProgressBar","PlayPanelAudioInfo","IoIosPlay","IoIosPause","IoMdSkipForward","IoMdSkipBackward","PlayPanel","isLoading","loop","audio","currentAudioObj","isPlaying","handlePlay","handlePlayNext","handlePlayPrev","volume","defaultVolume","duration","changeVolume","currentTime","handleAudioLoop","setAudioDuration","togglePlayPanel","showPlayPanel","player","transform","propTypes","audioList","array","currentAudio","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PlayPanelRight from './PlayPanelRight'\nimport PlayPanelProgressBar from './PlayPanelProgressBar'\nimport PlayPanelAudioInfo from './PlayPanelAudioInfo'\nimport './playerPanel.scss';\n\nimport {\n    IoIosPlay,\n    IoIosPause,\n    IoMdSkipForward,\n    IoMdSkipBackward\n} from \"react-icons/io\";\n\nconst PlayPanel = ({\n    isLoading,\n    loop,\n    audio,\n    currentAudioObj,\n    isPlaying,\n    handlePlay,\n    handlePlayNext,\n    handlePlayPrev,\n    volume,\n    defaultVolume,\n    duration,\n    changeVolume,\n    currentTime,\n    handleAudioLoop,\n    setAudioDuration,\n\n    togglePlayPanel,\n    showPlayPanel,\n    player\n}) => {\n\n\n    if(!audio) return null;\n\n\n    return (\n        <div\n            className={`ms_player_wrapper ${showPlayPanel ? '' : 'close_player'}`}\n        >\n\n            <div\n                className=\"ms_player_close\"\n                onClick={togglePlayPanel}\n            >\n                <i\n                    className=\"fa fa-angle-up\"\n                    aria-hidden=\"true\"\n                />\n            </div>\n\n            <div className=\"player_mid\">\n                <div className=\"audio-player\">\n\n                    <div className='jp-audio'>\n\n                        <PlayPanelProgressBar\n                            audio={audio}\n                            setAudioDuration={setAudioDuration}\n                        />\n\n                        <PlayPanelAudioInfo\n                            isLoading={isLoading}\n                            isPlaying={isPlaying}\n                            duration={duration}\n                            currentTime={currentTime}\n                            currentAudioObj={currentAudioObj}\n                        />\n\n                        <div className=\"jp-controls flex-item\">\n                            <button\n                                className=\"jp-previous\"\n                                onClick={handlePlayPrev}\n                            >\n                                <IoMdSkipBackward size={25} color={'white'}/>\n                            </button>\n\n                            <button\n                                className=\"jp-play\"\n                                onClick={handlePlay}\n                            >\n                                {player.isPlaying\n                                    ? <IoIosPause size={50} style={{transform: 'translateX(2px)'}} color={'white'}/>\n                                    : <IoIosPlay size={50} style={{transform: 'translateX(5px)'}} color={'white'}/>\n                                }\n\n                            </button>\n\n                            <button\n                                className=\"jp-next\"\n                                onClick={handlePlayNext}\n                            >\n                                <IoMdSkipForward size={25} color={'white'}/>\n                            </button>\n                        </div>\n\n                        <PlayPanelRight\n                            volume={volume}\n                            defaultVolume={defaultVolume}\n                            changeVolume={changeVolume}\n\n                            loop={loop}\n                            handleAudioLoop={handleAudioLoop}\n                        />\n\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nPlayPanel.propTypes = {\n    audioList: PropTypes.array,\n    currentAudio: PropTypes.number,\n};\n\nexport default PlayPanel;\n\n\n"]},"metadata":{},"sourceType":"module"}