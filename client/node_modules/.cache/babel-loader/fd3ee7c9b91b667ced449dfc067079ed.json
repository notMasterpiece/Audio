{"ast":null,"code":"var _jsxFileName = \"/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanelVolume.js\";\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport volume from \"../../assets/images/svg/volume.svg\";\n\nfunction getRotationDegrees(obj) {\n  debugger;\n  var matrix = obj.css(\"-webkit-transform\") || obj.css(\"-moz-transform\") || obj.css(\"-ms-transform\") || obj.css(\"-o-transform\") || obj.css(\"transform\");\n\n  if (matrix !== 'none') {\n    var values = matrix.split('(')[1].split(')')[0].split(',');\n    var a = values[0];\n    var b = values[1];\n    var angle = Math.round(Math.atan2(b, a) * (180 / Math.PI));\n  } else {\n    var angle = 0;\n  }\n\n  return angle < 0 ? angle + 360 : angle;\n}\n\nconst PlayPanelVolume = props => {\n  let volume = useRef();\n\n  const handleMouseDown = () => {\n    const angle = getRotationDegrees(volume.current);\n    console.log(angle);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"jp-volume-controls flex-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"widget knob-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"knob-wrapper-outer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"knob-wrapper\",\n    onMouseDown: handleMouseDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"knob-mask\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"knob d3\",\n    ref: volume,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"handle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: volume,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))))));\n};\n\nPlayPanelVolume.propTypes = {};\nexport default PlayPanelVolume;","map":{"version":3,"sources":["/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanelVolume.js"],"names":["React","useRef","PropTypes","getRotationDegrees","obj","matrix","css","values","split","a","b","angle","Math","round","atan2","PI","PlayPanelVolume","props","volume","handleMouseDown","current","console","log","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAIA,SAASC,kBAAT,CAA4BC,GAA5B,EAAiC;AAC7B;AACA,MAAIC,MAAM,GAAGD,GAAG,CAACE,GAAJ,CAAQ,mBAAR,KACTF,GAAG,CAACE,GAAJ,CAAQ,gBAAR,CADS,IAETF,GAAG,CAACE,GAAJ,CAAQ,eAAR,CAFS,IAGTF,GAAG,CAACE,GAAJ,CAAQ,cAAR,CAHS,IAITF,GAAG,CAACE,GAAJ,CAAQ,WAAR,CAJJ;;AAKA,MAAGD,MAAM,KAAK,MAAd,EAAsB;AAClB,QAAIE,MAAM,GAAGF,MAAM,CAACG,KAAP,CAAa,GAAb,EAAkB,CAAlB,EAAqBA,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,EAAmCA,KAAnC,CAAyC,GAAzC,CAAb;AACA,QAAIC,CAAC,GAAGF,MAAM,CAAC,CAAD,CAAd;AACA,QAAIG,CAAC,GAAGH,MAAM,CAAC,CAAD,CAAd;AACA,QAAII,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,KAAL,CAAWJ,CAAX,EAAcD,CAAd,KAAoB,MAAIG,IAAI,CAACG,EAA7B,CAAX,CAAZ;AACH,GALD,MAKO;AAAE,QAAIJ,KAAK,GAAG,CAAZ;AAAgB;;AACzB,SAAQA,KAAK,GAAG,CAAT,GAAcA,KAAK,GAAG,GAAtB,GAA4BA,KAAnC;AACH;;AAID,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAE7B,MAAIC,MAAM,GAAGjB,MAAM,EAAnB;;AAGA,QAAMkB,eAAe,GAAG,MAAM;AAC1B,UAAMR,KAAK,GAAGR,kBAAkB,CAACe,MAAM,CAACE,OAAR,CAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACH,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,WAAW,EAAEQ,eAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,SADd;AAEI,IAAA,GAAG,EAAED,MAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEA,MAAV;AAAkB,IAAA,GAAG,EAAC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CAJJ,CADJ,CADJ,CADJ,CADJ;AAwBH,CAlCD;;AAoCAF,eAAe,CAACO,SAAhB,GAA4B,EAA5B;AAIA,eAAeP,eAAf","sourcesContent":["import React, {useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport volume from '../../assets/images/svg/volume.svg';\n\n\nfunction getRotationDegrees(obj) {\n    debugger\n    var matrix = obj.css(\"-webkit-transform\") ||\n        obj.css(\"-moz-transform\")    ||\n        obj.css(\"-ms-transform\")     ||\n        obj.css(\"-o-transform\")      ||\n        obj.css(\"transform\");\n    if(matrix !== 'none') {\n        var values = matrix.split('(')[1].split(')')[0].split(',');\n        var a = values[0];\n        var b = values[1];\n        var angle = Math.round(Math.atan2(b, a) * (180/Math.PI));\n    } else { var angle = 0; }\n    return (angle < 0) ? angle + 360 : angle;\n}\n\n\n\nconst PlayPanelVolume = props => {\n\n    let volume = useRef();\n\n\n    const handleMouseDown = () => {\n        const angle = getRotationDegrees(volume.current);\n        console.log(angle);\n    };\n\n    return (\n        <div className=\"jp-volume-controls flex-item\">\n            <div className=\"widget knob-container\">\n                <div className=\"knob-wrapper-outer\">\n                    <div\n                        className=\"knob-wrapper\"\n                        onMouseDown={handleMouseDown}\n                    >\n                        <div className=\"knob-mask\">\n                            <div\n                                className=\"knob d3\"\n                                ref={volume}\n                            ><span /></div>\n                            <div className=\"handle\" />\n                            <div className=\"round\">\n                                <img src={volume} alt=\"\" />\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPlayPanelVolume.propTypes = {\n\n};\n\nexport default PlayPanelVolume;"]},"metadata":{},"sourceType":"module"}