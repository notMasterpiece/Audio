{"ast":null,"code":"var _jsxFileName = \"/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanelVolume.js\";\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport volumeImage from \"../../assets/images/svg/volume.svg\";\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nconst PlayPanelVolume = ({\n  changeVolume,\n  defaultValue,\n  volume\n}) => {\n  return React.createElement(\"div\", {\n    className: \"jp-volume-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jp-volume-image\",\n    onClick: volume === 0 ? () => changeVolume(0) : () => changeVolume(defaultValue),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: volumeImage,\n    alt: \"volume\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(SliderWithTooltip, {\n    defaultValue: defaultValue,\n    onChange: value => changeVolume(value),\n    tipFormatter: value => \"\".concat(value, \"%\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nPlayPanelVolume.propTypes = {\n  changeVolume: PropTypes.func.isRequired,\n  defaultValue: PropTypes.number.isRequired\n};\nexport default PlayPanelVolume;","map":{"version":3,"sources":["/Grawdanin/MERN/audio/src/components/PlayPanel/PlayPanelVolume.js"],"names":["React","useRef","PropTypes","Slider","createSliderWithTooltip","SliderWithTooltip","PlayPanelVolume","changeVolume","defaultValue","volume","volumeImage","value","propTypes","func","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAoB,WAApB;AACA,OAAO,4BAAP;;AAGA,MAAMC,uBAAuB,GAAGD,MAAM,CAACC,uBAAvC;AACA,MAAMC,iBAAiB,GAAGD,uBAAuB,CAACD,MAAD,CAAjD;;AAMA,MAAMG,eAAe,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA;AAA7B,CAAD,KAA0C;AAE9D,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AACI,IAAA,SAAS,EAAC,iBADd;AAEI,IAAA,OAAO,EAAGA,MAAM,KAAK,CAAZ,GAAiB,MAAMF,YAAY,CAAC,CAAD,CAAnC,GAAyC,MAAMA,YAAY,CAACC,YAAD,CAFxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACI,IAAA,GAAG,EAAEE,WADT;AAEI,IAAA,GAAG,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFJ,EAYK,oBAAC,iBAAD;AACI,IAAA,YAAY,EAAEF,YADlB;AAEI,IAAA,QAAQ,EAAEG,KAAK,IAAIJ,YAAY,CAACI,KAAD,CAFnC;AAGI,IAAA,YAAY,EAAEA,KAAK,cAAOA,KAAP,MAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZL,CADJ;AAqBH,CAvBD;;AAyBAL,eAAe,CAACM,SAAhB,GAA4B;AACxBL,EAAAA,YAAY,EAAEL,SAAS,CAACW,IAAV,CAAeC,UADL;AAExBN,EAAAA,YAAY,EAAEN,SAAS,CAACa,MAAV,CAAiBD;AAFP,CAA5B;AAKA,eAAeR,eAAf","sourcesContent":["import React, {useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Slider  from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport volumeImage from '../../assets/images/svg/volume.svg';\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\n\n\n\n\nconst PlayPanelVolume = ({changeVolume, defaultValue, volume}) => {\n\n    return (\n        <div className=\"jp-volume-wrap\">\n\n            <div\n                className=\"jp-volume-image\"\n                onClick={(volume === 0) ? () => changeVolume(0) : () => changeVolume(defaultValue)}\n            >\n                <img\n                    src={volumeImage}\n                    alt=\"volume\"\n                />\n            </div>\n\n             <SliderWithTooltip\n                 defaultValue={defaultValue}\n                 onChange={value => changeVolume(value)}\n                 tipFormatter={value => `${value}%`}\n             />\n\n        </div>\n    );\n};\n\nPlayPanelVolume.propTypes = {\n    changeVolume: PropTypes.func.isRequired,\n    defaultValue: PropTypes.number.isRequired,\n};\n\nexport default PlayPanelVolume;"]},"metadata":{},"sourceType":"module"}